{"version":3,"sources":["context/app.context.ts","images/user-default-avatar.svg","models/user.tsx","rest.js","page/main.js","component/filter/filterType.js","component/filter/filterFieldContext.js","component/filter/filterRangeType.js","component/select/appAsyncSelect.js","component/select/user.js","models/deal.js","component/select/deal.js","models/contact.js","component/select/contact.js","component/filter/filterField.js","component/filter/filterDefaults.js","utils.ts","enum/dataStorage.ts","component/filter/filter.js","enum/objectType.ts","component/filter/filterItem.js","component/table/tableStyle.js","component/loader.tsx","component/table/tableComponent.js","models/log.js","service/linkService.ts","component/table/logTable.js","page/log.js","page/settings.js","component/domainAuthorization.tsx","page/update.js","i18n.js","enum/accessKey.ts","component/header.js","App.js","reportWebVitals.ts","index.tsx"],"names":["defaultContext","settings","appVersion","getCurrentUser","initAppSettings","a","setAppSettings","key","data","updateComplete","access","setHeaderVisibility","state","AppContext","React","createContext","User","fields","admin","id","NAME","LAST_NAME","SECOND_NAME","EMAIL","PERSONAL_PHOTO","WORK_POSITION","PERSONAL_MOBILE","Object","assign","this","parseInt","ID","Rest","getDomain","Id","user","href","Link","target","title","FullName","Photo","className","style","backgroundImage","DefaultAvatar","length","BXRest","domain","cache","resizeTimestamp","scrollSize","initComplete","placementInformation","value","appCache","CacheType","KeyForDocument","KeyForUser","BX24","window","installFinish","lang","getAuth","_","Promise","resolve","reject","init","getLang","placement","info","callMethod","result","error","console","isAdmin","timestamp","Date","getTime","setTimeout","tryResize","fitWindow","batchData","callback","callBatch","items","Array","isArray","forEach","item","push","documents","method","requestData","all","prepareResult","more","next","total","offset","scrollParentWindow","options","ids","filter","x","arEntities","arFind","entity","then","catch","err","MainPage","refreshTable","table","current","tryLoadData","log","Component","contextType","Hidden","Text","Select","UserSelect","ContactSelect","DateRange","NumberRange","defaultFieldContext","filterItem","onChange","language","FilterFieldContext","name","AppAsyncSelect","props","_selectProgramFocus","setState","selectActive","_selectProgramBlur","_selectOnChange","selected","action","required","newProps","Fragment","cacheOptions","isClearable","placeholder","onInputChange","_selectInputChange","onFocus","onBlur","Trans","tabIndex","autoComplete","opacity","width","height","position","defaultValue","loadAction","inputValue","now","loadTimestamp","loading","arItems","ACTIVE","FIND","email","keys","label","delay","defaultOptions","loadOptions","isMulti","isDisabled","Deal","TITLE","ASSIGNED_BY_ID","CONTACT_ID","DealSelect","lenght","rd","entities","Name","object","Contact","lastName","find","FilterField","context","Type","FilterType","FilterFieldText","onChangeValue","e","description","objValue","hasValue","type","data-l10n-id","Title","FilterFieldNumberRange","onChangeType","onChangeFrom","from","onChangeTo","to","onChangePeriod","selectedOptions","option","text","period","dataParam","DataParams","join","FilterRangeType","map","htmlFor","FilterFieldDateRange","typeOptions","i18next","t","periodOptions","toLocaleDateString","max","toISOString","slice","FilterFieldSelect","Multiple","multiple","Items","FilterFieldUserSelect","loaded","val","FilterFieldDealSelect","FilterFieldContactSelect","FilterDefaults","Filters","Table","devices","programs","document","l10n","formatValue","tryAddFilter","resolveToday","addFilter","splice","filterName","filterFields","JSON","stringify","Utils","localStorage","setItem","warn","getItem","parse","str","array","toString","split","i","obj","totalSeconds","hours","Math","round","floor","minutes","seconds","padStart","response","convertFileBase64","file","fileReader","FileReader","readAsDataURL","onload","onerror","DataStorage","Filter","getFilterItemByName","index","findIndex","saveSortingRequest","ENTITY","filterSort","FILTER","PROPERTY_TABLE","PROPERTY_USER","PROPERTY_VALUES","TABLE","DATA","filterSorting","USER","clickFind","preventDefault","closeModal","clickReset","currentFilterId","removeRequestParams","clickClear","requestParams","clickCreateFilterMode","editMode","clickEditMode","currentFilter","loadedFilters","editFilterName","clickRemoveUserFilters","removeLoadedFilters","get","loadFilters","clickCancel","openModal","showModal","inputText","focus","toggleModal","openModalFields","showFieldsVisibility","loadFilterDefaultFields","Typing","Default","saveFilterRequest","DEFAULT","clickSelectFilter","clickSave","trim","clickSaveFieldsVisibility","values","includes","TypingFilterItem","clickRemovePresetFilter","clickRemovePresetParam","params","clickRemovePresetMore","arrMore","clickRemoveField","changeValue","changeTextInput","changeEditFilterName","editFilter","clickEditFilterName","clickRemoveFilter","removeFilterRequest","onSortFields","oldIndex","newIndex","arrayMove","onSortFilters","findTimestamp","findDelay","filterContainer","createRef","typingIndex","loadStateParams","loadDefault","loadFiltersRequest","sorting","loadFiltersEndAction","FilterModel","loadFiltersSorting","ex","tryParseJson","query","queryArray","stateString","getFromLocalStorage","default","findAction","trySaveStateParams","saveInLocalStorage","overlay","backgroundColor","content","top","offsetTop","left","offsetLeft","right","bottom","offsetWidth","padding","requestFilter","upperName","arValues","getStringArray","getValueByName","PREFIX","addValueToRequestFilter","textValue","numberRangeValue","dateRangeValue","NUMBER","Moment","startOf","valueOf","format","HTML5_FMT","DATE","add","subtract","selectValue","field","compareFilterFields","hasPreset","buffer","inputTextValue","reverse","arrPresetItems","onClick","ref","SortableFilterList","helperClass","lockAxis","useDragHandle","pressDelay","onSortEnd","SortableFieldList","onClickRemove","save","ObjectType","DragHanle","SortableHandle","SortableField","Provider","SortableFieldItem","SortableElement","SortableFields","SortableContainer","SortableFilter","autoFocus","SortableFilterItem","SortableFilters","FilterVisibility","clickSaveFields","clickCancelFields","select","indexOf","FilterItem","additionalParams","ContainerClassName","block","smallBlock","excludes","icon","Loader","role","TableComponent","selectRow","selectedItems","selectAll","getSelectAllCell","checked","isSelectedAll","isSelected","changeOnPage","onPage","currentPage","trySaveTableSettings","clickPaging","clickSort","sortBy","sortOrder","clickEditColumnsVisibility","showColumnVisibility","clickShowColumn","visibleColumns","getArrayPagination","num","limit","range","arr","clickApplyGroupAction","GroupActions","groupAction","btnGroupAction","setAttribute","removeAttribute","getEmptyView","filterKeysLenght","messages","filterEmpty","empty","getLoadingView","showOnPage","editColumns","firstLoadComplete","Header","localSaveTimestamp","loadTableSettings","getComponentId","saveTableSettings","saveToLocalStorage","resizeFrame","loadData","filterData","fillRequestFilter","FilterContainer","on","currentDefinition","chunk","lodash","getChunk","buttons","iconClassName","color","btn","getDropdownContent","getSelectRowContent","getStep","lastPage","arPagination","groupActions","textId","TableStyle","getBlockView","getSmallBlockView","headerItem","alwaysVisible","getHeaderObject","sortable","text_id","getCellObject","changeGroupAction","disabled","tag","Log","TYPE","OBJECT_ID","OBJECT_TYPE","DESCRIPTION","moment","LinkService","LogTable","toUpperCase","SORT","start","getOffset","applyFilter","userIds","UserId","getUsers","users","printRows","loadDataError","loadDataAlways","link","ObjectId","Description","LinkView","LogPage","filterItems","SettingsPage","onAdminsChange","admins","onSubmit","adminIds","refreshData","isLoaded","AdminList","Value","UpdatePage","events","currentCount","allCount","createEntitySettings","getPercent","installComplete","runAfterKey","createEntityLog","createEntityFilter","createEntityFilterSort","storageId","propData","PropSettingsValue","PROPERTY","createEntity","PropLogType","PropLogDate","PropLogUser","PropLogObjectId","PropLogObjectType","PropLogDescription","PropFilterTable","PropFilterData","PropFilterDefault","PropFilterUser","PropFilterSortTable","PropFilterSortData","PropFilterSortUser","eventHandler","addProgressKey","eventCopies","eventItem","event","handler","batchResult","eventResult","placements","properties","ACCESS","AU","createEntityProperties","startsWith","r","resources","en","translation","ru","i18n","use","initReactI18next","supportedLngs","fallbackLng","debug","interpolation","escapeValue","AccessKey","activeClassName","exact","App","VALUE","settingsCache","getAppSettingsCache","appSettings","DefaultSettings","appSettingsValue","getAppSettings","Key","SettingsItem","SaveInSettings","setNeedUpdate","needUpdate","currentUser","headerVisibility","Modal","setAppElement","locale","changeLanguage","Version","tryCheckInstall","INSTALLED","isInitComplete","path","component","funcDefault","saveInSettings","SaveStatus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.596d6e4a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst defaultContext = {\r\n    settings: {},\r\n    appVersion: 0,\r\n    getCurrentUser: () => {},\r\n    initAppSettings: async (): Promise<boolean> => { return true; },\r\n    setAppSettings: async (key: string, data: any): Promise<boolean> => { return true; },\r\n    updateComplete: () => {},\r\n    access: (key: string) => {},\r\n    setHeaderVisibility: (state: boolean) => {}\r\n};\r\n\r\nexport const AppContext = React.createContext(defaultContext);","export default __webpack_public_path__ + \"static/media/user-default-avatar.fe75c8d0.svg\";","import React from \"react\";\r\nimport { Rest } from \"../rest\";\r\nimport DefaultAvatar from '../images/user-default-avatar.svg';\r\n\r\nclass User {\r\n    id: number;\r\n    NAME: string = '';\r\n    LAST_NAME: string = '';\r\n    SECOND_NAME: string = '';\r\n    EMAIL: string = '';\r\n    PERSONAL_PHOTO: string = '';\r\n    WORK_POSITION: string = '';\r\n    PERSONAL_MOBILE: string = '';\r\n    admin: boolean = false;\r\n    constructor(fields: any, admin: boolean = false) {\r\n        Object.assign(this, fields);\r\n        this.id = parseInt(fields?.ID ?? fields?.id) || 0;\r\n        this.admin = admin;\r\n    }\r\n\r\n    get Id(): number {\r\n        return this.id;\r\n    }\r\n\r\n    get Link(): string {\r\n        return `https://${Rest.getDomain()}/company/personal/user/${this.Id}/`;\r\n    }\r\n\r\n    get LinkView() {\r\n        const user = this;\r\n        return (\r\n            <a href={user.Link} target=\"_blank\" title={user.FullName}>\r\n                {user.Photo\r\n                    ? <span className=\"tasks-grid-avatar\" style={{ backgroundImage: `url(${user.Photo})` }}></span>\r\n                    : <span className=\"tasks-grid-avatar bg-dark\" style={{ backgroundImage: `url(${DefaultAvatar})` }}></span>\r\n                }\r\n                {user.FullName}\r\n            </a>\r\n        );\r\n    }\r\n\r\n    get LinkIconView() {\r\n        const user = this;\r\n        return (\r\n            <a href={user.Link} target=\"_blank\" title={user.FullName}>\r\n                {user.Photo\r\n                    ? <span className=\"tasks-grid-avatar\" style={{ backgroundImage: `url(${user.Photo})` }}></span>\r\n                    : <span className=\"tasks-grid-avatar bg-dark\" style={{ backgroundImage: `url(${DefaultAvatar})` }}></span>\r\n                }\r\n            </a>\r\n        );\r\n    }\r\n\r\n    get Photo() {\r\n        return this.PERSONAL_PHOTO && this.PERSONAL_PHOTO.length > 0 ? this.PERSONAL_PHOTO : false;\r\n    }\r\n\r\n    get Position() {\r\n        return this.WORK_POSITION;\r\n    }\r\n\r\n    get FullName() {\r\n        if (this.NAME && this.NAME.length > 0) {\r\n            if (this.LAST_NAME && this.LAST_NAME.length > 0) {\r\n                return this.NAME + ' ' + this.LAST_NAME;\r\n            }\r\n            return this.NAME;\r\n        }\r\n\r\n        if (this.EMAIL && this.EMAIL.length > 0)\r\n            return this.EMAIL;\r\n\r\n        return 'ID: ' + this.Id;\r\n    }\r\n\r\n    get isAdmin(): boolean {\r\n        return this.admin;\r\n    }\r\n}\r\n\r\nexport default User;","import User from './models/user';\r\n\r\nclass BXRest {\r\n    constructor() {\r\n        this.domain = '';\r\n        this.cache = {};\r\n        this.resizeTimestamp = 0;\r\n        this.scrollSize = {};\r\n        this.initComplete = false\r\n        this.placementInformation = false;\r\n        // this.local = !false;\r\n    }\r\n\r\n    appCache(key, value) {\r\n        if (typeof value === 'undefined') {\r\n            return this.cache[key];\r\n        }\r\n        this.cache[key] = value;\r\n    }\r\n\r\n    clearCacheDocument(id) {\r\n        this.appCache(CacheType.KeyForDocument(id), null);\r\n    }\r\n\r\n    clearCacheUser(id) {\r\n        this.appCache(CacheType.KeyForUser(id), null);\r\n    }\r\n\r\n    installComplete() {\r\n        const BX24 = window.BX24 || false;\r\n        if (!BX24)\r\n            return;\r\n\r\n        BX24.installFinish();\r\n    }\r\n\r\n    getDomain() {\r\n        return this.domain;\r\n    }\r\n\r\n    getLang() {\r\n        return this.lang === 'ru' ? 'ru' : 'en';\r\n    }\r\n\r\n    isInitComplete() {\r\n        return this.initComplete;\r\n    }\r\n\r\n    getAuth() {\r\n        const BX24 = window.BX24 || false;\r\n        if (!BX24)\r\n            return;\r\n        return BX24.getAuth();\r\n    }\r\n\r\n    init() {\r\n        const _ = this;\r\n        return new Promise((resolve, reject) => {\r\n            const BX24 = window.BX24 || false;\r\n            if (BX24) {\r\n                BX24.init(function () {\r\n                    _.initComplete = true;\r\n                    _.domain = BX24.getDomain();\r\n                    _.lang = BX24.getLang();\r\n                    _.placementInformation = BX24.placement.info();\r\n                    BX24.callMethod('user.current', {}, function (result) {\r\n                        if (result.error()) {\r\n                            console.error('error-get-current-user', result.error());\r\n                            reject();\r\n                        }\r\n                        else {\r\n                            const user = new User(result.data(), BX24.isAdmin());\r\n                            resolve(user);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                reject();\r\n            }\r\n        })\r\n    }\r\n\r\n    resizeFrame() {\r\n        const _ = this;\r\n        const timestamp = new Date().getTime();\r\n        this.resizeTimestamp = timestamp;\r\n        setTimeout(function () {\r\n            _.tryResize(timestamp);\r\n        }, 300);\r\n    }\r\n\r\n    tryResize(timestamp) {\r\n        const BX24 = window.BX24 || false;\r\n        if (!BX24)\r\n            return;\r\n        const _ = this;\r\n        if (_.resizeTimestamp === timestamp) {\r\n            BX24.fitWindow();\r\n        }\r\n    }\r\n\r\n\r\n    callBatch(batchData, callback) {\r\n        const BX24 = window.BX24 || false;\r\n        if (!BX24)\r\n            return;\r\n        BX24.callBatch(batchData, function (result) {\r\n            callback(result);\r\n        });\r\n    }\r\n\r\n    prepareResult(items, data) {\r\n        if (Array.isArray(data)) {\r\n            data.forEach((item) => {\r\n                items.push(item);\r\n            });\r\n            return;\r\n        }\r\n        if (data.documents && Array.isArray(data.documents)) {\r\n            data.documents.forEach((item) => {\r\n                items.push(item);\r\n            });\r\n            return;\r\n        }\r\n        items.push(data);\r\n    }\r\n\r\n    callMethod(method, requestData = {}, all = false) {\r\n        const _ = this;\r\n        return new Promise((resolve, reject) => {\r\n            const BX24 = window.BX24 || false;\r\n            if (!BX24) {\r\n                reject();\r\n                return;\r\n            }\r\n            const items = [];\r\n            BX24.callMethod(method, requestData, (result) => {\r\n                if (result.error()) {\r\n                    reject(result.error());\r\n                }\r\n                else {\r\n                    const data = result.data();\r\n                    _.prepareResult(items, data);\r\n                    if (!all) {\r\n                        resolve({ items: items, total: result.total() });\r\n                    }\r\n                    else {\r\n                        if (result.more()) {\r\n                            result.next();\r\n                        }\r\n                        else {\r\n                            resolve({ items: items });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    scrollParentWindow(offset = 0) {\r\n        const BX24 = window.BX24 || false;\r\n        if (!BX24) {\r\n            return;\r\n        }\r\n        BX24.scrollParentWindow(offset);\r\n    }\r\n\r\n    placementInfo() {\r\n        return this.placementInformation;\r\n    }\r\n\r\n    removePlacementOption(key) {//todo\r\n        delete this.placementInformation.options[key];\r\n    }\r\n    \r\n    getUsers(ids) {\r\n        const _ = this;\r\n        return new Promise((resolve, reject) => {\r\n            ids = ids.filter(x => x > 0);\r\n            var arEntities = {};\r\n            const arFind = [];\r\n            ids.forEach((id) => {\r\n                var entity = _.appCache(CacheType.KeyForUser(id));\r\n                if (entity) {\r\n                    arEntities[id] = entity;\r\n                } else {\r\n                    arFind.push(id);\r\n                }\r\n            });\r\n\r\n            if (arFind.length < 1) {\r\n                resolve(arEntities);\r\n                return;\r\n            }\r\n            _.callMethod('user.get', { 'ID': arFind }, true).then((result) => {\r\n                result.items.forEach(item => {\r\n                    const entity = new User(item, Rest.getDomain());\r\n                    _.appCache(CacheType.KeyForUser(entity.Id), entity);\r\n                    arEntities[entity.Id] = entity;\r\n                });\r\n                resolve(arEntities);\r\n            }).catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nclass CacheType {\r\n    static KeyForUser(id) {\r\n        return `User_${id}`;\r\n    }\r\n\r\n    static KeyForDocument(id) {\r\n        return `Document_${id}`;\r\n    }\r\n}\r\n\r\nexport const Rest = new BXRest();","import React from 'react';\r\nimport { AppContext } from '../context/app.context';\r\nimport {Rest} from '../rest'\r\n\r\nexport default class MainPage extends React.Component {\r\n    static contextType = AppContext;\r\n\r\n    refreshTable = () => {\r\n        if (this.table && this.table.current) {\r\n            this.table.current.tryLoadData();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        Rest.callMethod('crm.deal.list', null)\r\n          .then(data => console.log(data))\r\n          .catch(err => console.error(err))\r\n\r\n\r\n        return (\r\n            <div>\r\n                Main Page 123\r\n            </div>\r\n        );\r\n    }\r\n}","export default {\r\n    Hidden: 'hidden',\r\n    Text: 'text',\r\n    Select: 'select',\r\n    UserSelect: 'user-select',\r\n    ContactSelect: 'contact-select',\r\n    DateRange: 'date-range',\r\n    NumberRange: 'number-range'\r\n};","import React from \"react\";\r\n\r\nconst defaultFieldContext = {\r\n    value: false,\r\n    filterItem: {},\r\n    onChange: () => {},\r\n    language: ''\r\n};\r\n\r\nexport const FilterFieldContext = React.createContext(defaultFieldContext);","export default {    \r\n    Equal: 'equal',\r\n    GreaterThan: 'greater',\r\n    LessThan: 'less',\r\n    Range: 'range',\r\n    Period: 'period',\r\n    Today: 'today',\r\n    Yesterday: 'yesterday',\r\n    Week: 'week',\r\n    Month: 'month',\r\n    Items: () => {\r\n        return [\r\n            //{ id: 'equal', name: `filter-range-type-equal` },\r\n            { id: 'greater', name: `filter-range-type-greater` },\r\n            { id: 'less', name: `filter-range-type-less` },\r\n            { id: 'range', name: `filter-range-type-range` }\r\n        ]\r\n    },\r\n    DateItems: () => {\r\n        return [\r\n            { id: 'period', name: `filter-range-type-period` },\r\n            { id: 'greater', name: `filter-range-type-greater` },\r\n            { id: 'less', name: `filter-range-type-less` },\r\n            { id: 'range', name: `filter-range-type-range` }\r\n        ];\r\n    },\r\n    PeriodItems: () => {\r\n        return [\r\n            { id: 'today', name: 'date-today'},\r\n            { id: 'yesterday', name: 'date-yesterday'},\r\n            { id: 'week', name: 'date-week'},\r\n            { id: 'month', name: 'date-month'}\r\n        ];\r\n    }\r\n};","import React from \"react\";\r\nimport { Trans } from \"react-i18next\";\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nclass AppAsyncSelect extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            selectActive: false\r\n        };\r\n    }\r\n\r\n    _selectProgramFocus = () => {\r\n        this.setState({ selectActive: true });\r\n    }\r\n\r\n    _selectProgramBlur = () => {\r\n        this.setState({ selectActive: false });\r\n    }\r\n\r\n    _selectOnChange = (selected, action) => {\r\n        if (selected) {\r\n            //this.setState({value: selected});\r\n        }\r\n        else {\r\n            //this.setState({value: false});\r\n        }\r\n        if (this.props.onChange) {\r\n            this.props.onChange(selected, action);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { required, title, onChange, ...newProps } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <AsyncSelect {...newProps} cacheOptions isClearable={true} placeholder='' onInputChange={this._selectInputChange} required={required} onChange={this._selectOnChange} onFocus={this._selectProgramFocus} onBlur={this._selectProgramBlur} />\r\n                {title &&\r\n                    <label className={`select-label ${this.props.value || this.state.selectActive ? 'active' : ''}`}><Trans>{title}</Trans></label>\r\n                }\r\n                {required &&\r\n                    <input tabIndex={-1} autoComplete=\"off\" style={{\r\n                        opacity: 0,\r\n                        width: \"100%\",\r\n                        height: 0,\r\n                        position: \"absolute\"\r\n                    }} defaultValue={this.props.value ? 'Y' : ''} required />\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppAsyncSelect;","import React from \"react\";\r\nimport AppAsyncSelect from './appAsyncSelect';\r\nimport { Rest } from '../../rest';\r\nimport User from '../../models/user';\r\n\r\nexport default class UserSelect extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            loading: false\r\n        };\r\n        this.delay = 500;\r\n        this.loadTimestamp = 0;\r\n    }\r\n\r\n    loadAction = (inputValue, callback) => {\r\n        const _ = this;\r\n        const now = new Date().getTime();\r\n        _.loadTimestamp = now;\r\n        _.setState({\r\n            loading: true\r\n        });\r\n        setTimeout(() => {\r\n            if (_.loadTimestamp !== now)\r\n                return;\r\n\r\n            if (!inputValue || inputValue.length < 1) {\r\n                _.setState({\r\n                    loading: false\r\n                });\r\n                callback([]);\r\n                return;\r\n            }\r\n\r\n            const arItems = [];\r\n            const batchData = {\r\n                name: ['user.search', { ACTIVE: 'Y', FIND: inputValue }],\r\n                email: ['user.search', { ACTIVE: 'Y', EMAIL: `%${inputValue}%` }]\r\n            };\r\n\r\n            Rest.callBatch(batchData, (result) => {\r\n                Object.keys(result).forEach((key) => {\r\n                    if (result[key].error()) {\r\n                        return;\r\n                    }\r\n                    result[key].data().forEach((item) => {\r\n                        const entity = new User(item);\r\n                        arItems.push({\r\n                            value: entity.Id,\r\n                            label: entity.FullName\r\n                        });\r\n                    });\r\n                });\r\n                _.setState({\r\n                    loading: false\r\n                });\r\n                callback(arItems);\r\n            });\r\n        }, _.delay);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppAsyncSelect className=\"react-select\" defaultOptions title={this.props.title} value={this.props.value} loadOptions={this.loadAction} onChange={this.props.onChange}\r\n                required={this.props.required} isMulti={this.props.isMulti} isDisabled={this.props.isDisabled}\r\n            ></AppAsyncSelect>\r\n        );\r\n    }\r\n}","import { Rest } from \"../rest\";\r\n\r\nexport default class Deal {\r\n    constructor(fields) {\r\n        Object.assign(this, fields);\r\n    }\r\n\r\n    get Id() {\r\n        return parseInt(this.ID) || 0;\r\n    }\r\n\r\n    get Link() {\r\n        return `https://${Rest.getDomain()}/crm/deal/details/${this.Id}/`;\r\n    }\r\n\r\n    get Name() {\r\n        return this.TITLE;\r\n    }\r\n\r\n    get ResponsibleId() {\r\n        return parseInt(this.ASSIGNED_BY_ID) || 0;\r\n    }\r\n\r\n    get ContactId() {\r\n        return parseInt(this.CONTACT_ID) || 0;\r\n    }\r\n}","import React from \"react\";\r\nimport AppAsyncSelect from './appAsyncSelect';\r\nimport { Rest } from '../../rest';\r\nimport User from '../../models/user';\r\nimport Deal from \"../../models/deal\";\r\n\r\nclass DealSelect extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            loading: false\r\n        };\r\n        this.delay = 500;\r\n        this.loadTimestamp = 0;\r\n    }\r\n\r\n    loadAction = (inputValue, callback) => {\r\n        const _ = this;\r\n        const now = new Date().getTime();\r\n        _.loadTimestamp = now;\r\n        _.setState({\r\n            loading: true\r\n        });\r\n        setTimeout(() => {\r\n            if (_.loadTimestamp !== now)\r\n                return;\r\n\r\n            if (!inputValue || inputValue.lenght < 1) {\r\n                _.setState({\r\n                    loading: false\r\n                });\r\n                callback([]);\r\n                return;\r\n            }\r\n\r\n            const arItems = [];\r\n            const rd = {\r\n                filter: {\r\n                    '%TITLE': inputValue\r\n                }\r\n            };\r\n\r\n            Rest.callMethod('crm.deal.list', rd).then((entities) => {\r\n                entities.items.forEach((item) => {\r\n                    const entity = new Deal(item);\r\n                    arItems.push({\r\n                        value: entity.Id,\r\n                        label: entity.Name,\r\n                        object: entity\r\n                    });\r\n                    _.setState({\r\n                        loading: false\r\n                    });\r\n                    callback(arItems);\r\n                });\r\n            }).catch((err) => {\r\n                callback([]);\r\n            });\r\n        }, _.delay);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppAsyncSelect className=\"react-select\" defaultOptions title={this.props.title} value={this.props.value} loadOptions={this.loadAction} onChange={this.props.onChange}\r\n                required={this.props.required} isMulti={this.props.isMulti} isDisabled={this.props.isDisabled}\r\n            ></AppAsyncSelect>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DealSelect;","import { Rest } from \"../rest\";\r\n\r\nexport default class Contact {\r\n    constructor(fields) {\r\n        Object.assign(this, fields);\r\n    }\r\n\r\n    get Id() {\r\n        return parseInt(this.ID) || 0;\r\n    }\r\n\r\n    get Link() {\r\n        return `https://${Rest.getDomain()}/crm/contact/details/${this.Id}/`;\r\n    }\r\n\r\n    get FullName() {\r\n        if (this.NAME && this.NAME.length > 0) {\r\n            if (this.LAST_NAME && this.LAST_NAME.length > 0) {\r\n                return this.NAME + ' ' + this.LAST_NAME;\r\n            }\r\n            return this.NAME;\r\n        }\r\n\r\n        if (this.EMAIL && this.EMAIL.length > 0)\r\n            return this.EMAIL;\r\n\r\n        return 'ID: ' + this.Id;\r\n    }\r\n}","import React from \"react\";\r\nimport AppAsyncSelect from './appAsyncSelect';\r\nimport { Rest } from '../../rest';\r\nimport Contact from '../../models/contact';\r\n\r\nexport default class ContactSelect extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            loading: false\r\n        };\r\n        this.delay = 500;\r\n        this.loadTimestamp = 0;\r\n    }\r\n\r\n    loadAction = (inputValue, callback) => {\r\n        const _ = this;\r\n        const now = new Date().getTime();\r\n        _.loadTimestamp = now;\r\n        _.setState({\r\n            loading: true\r\n        });\r\n        setTimeout(() => {\r\n            if (_.loadTimestamp !== now)\r\n                return;\r\n\r\n            if (!inputValue || inputValue.length < 1) {\r\n                _.setState({\r\n                    loading: false\r\n                });\r\n                callback([]);\r\n                return;\r\n            }\r\n\r\n            const arItems = [];\r\n            const batchData = {\r\n                email: ['crm.contact.list', { filter: { EMAIL: inputValue } }],\r\n                name: ['crm.contact.list', { filter: { '%NAME': inputValue } }],\r\n                lastName: ['crm.contact.list', { filter: { '%LAST_NAME': inputValue } }]\r\n            };\r\n\r\n            Rest.callBatch(batchData, (result) => {\r\n                Object.keys(result).forEach((key) => {\r\n                    if (result[key].error()) {\r\n                        return;\r\n                    }\r\n                    result[key].data().forEach((item) => {\r\n                        const entity = new Contact(item);\r\n                        if (arItems.find(x => x.value === entity.Id)) {\r\n                            return;\r\n                        }\r\n                        arItems.push({\r\n                            value: entity.Id,\r\n                            label: entity.FullName\r\n                        });\r\n                    });\r\n                });\r\n                _.setState({\r\n                    loading: false\r\n                });\r\n                callback(arItems);\r\n            });\r\n        }, _.delay);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppAsyncSelect className=\"react-select\" defaultOptions title={this.props.title} value={this.props.value} loadOptions={this.loadAction} onChange={this.props.onChange}\r\n                required={this.props.required} isMulti={this.props.isMulti} isDisabled={this.props.isDisabled}\r\n            ></AppAsyncSelect>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { MDBInput } from \"mdb-react-ui-kit\";\r\nimport { Trans } from 'react-i18next';\r\nimport i18next from \"i18next\";\r\nimport Select from 'react-select';\r\nimport FilterType from './filterType';\r\nimport { FilterFieldContext } from './filterFieldContext';\r\nimport FilterRangeType from './filterRangeType';\r\nimport UserSelect from '../select/user';\r\nimport DealSelect from \"../select/deal\";\r\nimport ContactSelect from \"../select/contact\";\r\n\r\nclass FilterField extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                {this.context.filterItem.Type === FilterType.Text &&\r\n                    <FilterFieldText />\r\n                }\r\n                {this.context.filterItem.Type === FilterType.NumberRange &&\r\n                    <FilterFieldNumberRange />\r\n                }\r\n                {this.context.filterItem.Type === FilterType.DateRange &&\r\n                    <FilterFieldDateRange />\r\n                }\r\n                {this.context.filterItem.Type === FilterType.Select &&\r\n                    <FilterFieldSelect />\r\n                }\r\n                {this.context.filterItem.Type === FilterType.UserSelect &&\r\n                    <FilterFieldUserSelect />\r\n                }\r\n                {this.context.filterItem.Type === FilterType.DealSelect &&\r\n                    <FilterFieldDealSelect />\r\n                }\r\n                {this.context.filterItem.Type === FilterType.ContactSelect &&\r\n                    <FilterFieldContactSelect />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterFieldText extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: [],\r\n            description: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const objValue = this.context.value;\r\n        this.setState({\r\n            value: objValue && objValue.value ? objValue.value : []\r\n        });\r\n    }\r\n\r\n    onChange() {\r\n        const result = { ...this.state };\r\n        this.context.onChange(result, this.context.filterItem);\r\n    }\r\n\r\n    onChangeValue = (e) => {\r\n        const value = [];\r\n        const description = [];\r\n\r\n        if (e.target.value && e.target.value.length > 0) {\r\n            value.push(e.target.value);\r\n            description.push(e.target.value);\r\n        }\r\n        this.setState({\r\n            value: value,\r\n            description: description\r\n        }, this.onChange);\r\n    }\r\n\r\n    render() {\r\n        const _ = this;\r\n        const filterItem = this.context.filterItem;\r\n        const hasValue = this.state.value.length > 0;\r\n        return (\r\n            <div className=\"md-form md-outline m-0\">\r\n                <input type=\"text\" className=\"form-control mb-0\" value={this.state.value.length > 0 ? this.state.value[0] : ''} onChange={this.onChangeValue} />\r\n                <label className={hasValue ? 'active' : ''} data-l10n-id={filterItem.Title}></label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterFieldNumberRange extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            type: '',\r\n            from: false,\r\n            to: false,\r\n            value: false,\r\n            description: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const objValue = this.context.value;\r\n        this.dataParam = this.context.filterItem.DataParams ? this.context.filterItem.DataParams.join(' ') : '';\r\n        this.setState({\r\n            type: objValue && objValue.type ? objValue.type : FilterRangeType.Range,\r\n            from: objValue && objValue.from !== false ? objValue.from : false,\r\n            to: objValue && objValue.to !== false ? objValue.to : false,\r\n            value: objValue && objValue.value !== false ? objValue.value : false,\r\n            period: objValue && objValue.period ? objValue.period : false\r\n        });\r\n    }\r\n\r\n    onChange() {\r\n        const result = { ...this.state };\r\n\r\n        if (result.type === FilterRangeType.Range) {\r\n            result.value = false;\r\n            result.period = false;\r\n            if (result.from && result.to) {\r\n                result.description = [`${result.from} - ${result.to}`];\r\n            }\r\n            else {\r\n                if (result.from) {\r\n                    result.description = [`> ${result.from}`];\r\n                }\r\n                if (result.to) {\r\n                    result.description = [`< ${result.to}`];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (result.type !== FilterRangeType.Range) {\r\n            result.from = false;\r\n            result.to = false;\r\n            result.period = false;\r\n            if (result.value) {\r\n                switch (result.type) {\r\n                    case FilterRangeType.GreaterThan:\r\n                        result.description = [`> ${result.value}`];\r\n                        break;\r\n                    case FilterRangeType.LessThan:\r\n                        result.description = [`< ${result.value}`];\r\n                        break;\r\n                    default:\r\n                        result.description = [`${result.value}`];\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.context.onChange(result, this.context.filterItem);\r\n    }\r\n\r\n    onChangeType = (e) => {\r\n        this.setState({\r\n            type: e.target.value\r\n        }, this.onChange);\r\n    }\r\n\r\n    onChangeFrom = (e) => {\r\n        this.setState({\r\n            from: e.target.value ? e.target.value : false\r\n        }, this.onChange);\r\n    }\r\n\r\n    onChangeTo = (e) => {\r\n        this.setState({\r\n            to: e.target.value ? e.target.value : false\r\n        }, this.onChange);\r\n    }\r\n\r\n    onChangeValue = (e) => {\r\n        this.setState({\r\n            value: e.target.value ? e.target.value : false\r\n        }, this.onChange);\r\n    }\r\n\r\n    onChangePeriod = (e) => {\r\n        let value = '';\r\n        const description = [];\r\n        Array.from(e.target.selectedOptions, option => {\r\n            if (option.value && option.value.length > 0) {\r\n                value = option.value;\r\n                description.push(option.text);\r\n            }\r\n        });\r\n        this.setState({\r\n            period: value && value.length > 0 ? value : false,\r\n            description: description\r\n        }, this.onChange);\r\n    }\r\n\r\n    render() {\r\n        const filterItem = this.context.filterItem;\r\n        return (\r\n            <div className=\"md-form md-outline m-0 filter-range\">\r\n                <label className=\"active\" data-l10n-id={filterItem.Title}></label>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-7 col-xl-4 mb-2 mb-xl-0\">\r\n                        <select className=\"browser-default custom-select\" value={this.state.type} onChange={this.onChangeType}>\r\n                            {FilterRangeType.Items().map((item) => (\r\n                                <option key={item.id} value={item.id} data-l10n-id={item.name}></option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {this.state.type === FilterRangeType.Range &&\r\n                        <React.Fragment>\r\n                            <div className=\"col-6 col-xl-4 mt-2 mt-xl-0\">\r\n                                <div className=\"from\">\r\n                                    <input type=\"number\" className=\"form-control mb-0\" name={`${filterItem.Name}_from`} id={`f-${filterItem.Name}-from`} onChange={this.onChangeFrom} value={`${this.state.from !== false ? this.state.from : ''}`} {...this.dataParam} />\r\n                                    <label className={this.state.from ? 'active' : ''} htmlFor={`f-${filterItem.Name}-from`} data-l10n-id=\"main-from\"></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-4 mt-2 mt-xl-0\">\r\n                                <div className=\"to\">\r\n                                    <input type=\"number\" className=\"form-control mb-0\" name={`${filterItem.Name}_to`} id={`f-${filterItem.Name}-to`} onChange={this.onChangeTo} value={`${this.state.to !== false ? this.state.to : ''}`} {...this.dataParam} />\r\n                                    <label className={this.state.to ? 'active' : ''} htmlFor={`f-${filterItem.Name}-to`} data-l10n-id=\"main-to\"></label>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {this.state.type !== FilterRangeType.Range &&\r\n                        <div className=\"col-12 col-xl-8 mt-2 mt-xl-0\">\r\n                            <input type=\"number\" className=\"form-control mb-0\" name={filterItem.Name} id={`f-${filterItem.Name}`} onChange={this.onChangeValue} value={`${this.state.value !== false ? this.state.value : ''}`} {...this.dataParam} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterFieldDateRange extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            type: '',\r\n            from: false,\r\n            to: false,\r\n            value: false,\r\n            description: []\r\n        };\r\n\r\n        this.typeOptions = [];\r\n        FilterRangeType.DateItems().forEach((item) => {\r\n            this.typeOptions.push({\r\n                value: item.id,\r\n                label: i18next.t(item.name)\r\n            });\r\n        });\r\n\r\n        this.periodOptions = [];\r\n        FilterRangeType.PeriodItems().forEach((item) => {\r\n            this.periodOptions.push({\r\n                value: item.id,\r\n                label: i18next.t(item.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const objValue = this.context.value;\r\n        this.dataParam = this.context.filterItem.DataParams ? this.context.filterItem.DataParams.join(' ') : '';\r\n        const type = objValue && objValue.type ? objValue.type : FilterRangeType.Range;\r\n        const period = objValue && objValue.period ? objValue.period : FilterRangeType.Today;\r\n        this.setState({\r\n            type: this.typeOptions.find(x => x.value === type),\r\n            from: objValue && objValue.from ? objValue.from : false,\r\n            to: objValue && objValue.to ? objValue.to : false,\r\n            value: objValue && objValue.value ? objValue.value : false,\r\n            period: this.periodOptions.find(x => x.value === period),\r\n        });\r\n    }\r\n\r\n    onChange() {\r\n        const result = { ...this.state };\r\n\r\n        result.type = result.type.value;\r\n\r\n        if (result.type === FilterRangeType.Range) {\r\n            result.value = false;\r\n            result.period = false;\r\n            if (result.from && result.to) {\r\n                result.description = [`${new Date(result.from).toLocaleDateString(this.context.language)} - ${new Date(result.to).toLocaleDateString(this.context.language)}`];\r\n            }\r\n            else {\r\n                if (result.from) {\r\n                    result.description = [`> ${new Date(result.from).toLocaleDateString(this.context.language)}`];\r\n                }\r\n                if (result.to) {\r\n                    result.description = [`< ${new Date(result.to).toLocaleDateString(this.context.language)}`];\r\n                }\r\n            }\r\n        }\r\n        if (result.type === FilterRangeType.Period) {\r\n            result.value = false;\r\n            result.from = false;\r\n            result.to = false;\r\n            if (result.period) {\r\n                result.description = [result.period.label];\r\n                result.period = result.period.value;\r\n            }\r\n        }\r\n        if (result.type !== FilterRangeType.Range && result.type !== FilterRangeType.Period) {\r\n            result.from = false;\r\n            result.to = false;\r\n            result.period = false;\r\n            if (result.value) {\r\n                switch (result.type) {\r\n                    case FilterRangeType.GreaterThan:\r\n                        result.description = [`> ${new Date(result.value).toLocaleDateString(this.context.language)}`];\r\n                        break;\r\n                    case FilterRangeType.LessThan:\r\n                        result.description = [`< ${new Date(result.value).toLocaleDateString(this.context.language)}`];\r\n                        break;\r\n                    default:\r\n                        result.description = [`${new Date(result.value).toLocaleDateString(this.context.language)}`];\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.context.onChange(result, this.context.filterItem);\r\n    }\r\n\r\n    onChangeType = (selected) => {\r\n        this.setState({\r\n            type: selected\r\n        }, this.onChange);\r\n    }\r\n\r\n    onChangeFrom = (e) => {\r\n        this.setState({\r\n            from: e.target.value ? e.target.value : false\r\n        }, this.onChange);\r\n    }\r\n\r\n    onChangeTo = (e) => {\r\n        this.setState({\r\n            to: e.target.value ? e.target.value : false\r\n        }, this.onChange);\r\n    }\r\n\r\n    onChangeValue = (e) => {\r\n        this.setState({\r\n            value: e.target.value ? e.target.value : false\r\n        }, this.onChange);\r\n    }\r\n\r\n    onChangePeriod = (selected) => {\r\n        this.setState({\r\n            period: selected\r\n        }, this.onChange);\r\n    }\r\n\r\n    render() {\r\n        const filterItem = this.context.filterItem;//label={i18next.t('main-from')} label={i18next.t('main-to')}\r\n        return (\r\n            <div className=\"filter-range\">\r\n                <label className=\"active\"><Trans>{filterItem.Title}</Trans></label>\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 col-xl-4\">\r\n                        <Select value={this.state.type} onChange={this.onChangeType} options={this.typeOptions} />\r\n                    </div>\r\n                    {this.state.type.value === FilterRangeType.Range &&\r\n                        <>\r\n                            <div className=\"col-6 col-xl-4 mt-2 mt-xl-0\">\r\n                                <MDBInput type=\"date\" max=\"2100-01-01\" onChange={this.onChangeFrom} value={`${this.state.from !== false ? new Date(this.state.from).toISOString().slice(0, 10) : ''}`} {...this.dataParam} placeholder={i18next.t('filter-field-input-date-placeholder')} />\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-4 mt-2 mt-xl-0\">\r\n                                <MDBInput type=\"date\" max=\"2100-01-01\" onChange={this.onChangeTo} value={`${this.state.to !== false ? new Date(this.state.to).toISOString().slice(0, 10) : ''}`} {...this.dataParam} placeholder={i18next.t('filter-field-input-date-placeholder')} />\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    {this.state.type.value === FilterRangeType.Period &&\r\n                        <div className=\"col-12 col-xl-8 mt-2 mt-xl-0\">\r\n                            <div className=\"form-outline\">\r\n                                <Select value={this.state.period} onChange={this.onChangePeriod} options={this.periodOptions} />\r\n                                <label className={`select-label ${this.state.period ? 'active' : ''}`}><Trans>filter-range-type-period</Trans></label>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {this.state.type.value !== FilterRangeType.Range && this.state.type.value !== FilterRangeType.Period &&\r\n                        <div className=\"col-12 col-xl-8 mt-2 mt-xl-0\">\r\n                            <MDBInput type=\"date\" name={filterItem.Name} id={`f-${filterItem.Name}`} max=\"2100-01-01\" onChange={this.onChangeValue} value={`${this.state.value !== false ? new Date(this.state.value).toISOString().slice(0, 10) : ''}`} {...this.dataParam} placeholder={i18next.t('filter-field-input-date-placeholder')} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterFieldSelect extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: [],\r\n            description: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const objValue = this.context.value;\r\n        this.setState({\r\n            value: objValue && objValue.value ? objValue.value : []\r\n        });\r\n    }\r\n\r\n    onChange() {\r\n        const result = { ...this.state };\r\n        this.context.onChange(result, this.context.filterItem);\r\n    }\r\n\r\n    onChangeValue = (e) => {\r\n        const value = [];\r\n        const description = [];\r\n\r\n        Array.from(e.target.selectedOptions, option => {\r\n            if (option.value && option.value.length > 0) {\r\n                value.push(option.value);\r\n                description.push(option.text);\r\n            }\r\n        });\r\n        this.setState({\r\n            value: value,\r\n            description: description\r\n        }, this.onChange);\r\n    }\r\n\r\n    render() {\r\n        const _ = this;\r\n        const filterItem = this.context.filterItem;\r\n        const hasValue = (filterItem.Multiple === 'Y' && this.state.value.length > 0) || (filterItem.Multiple !== 'Y' && this.state.value.length > 0);\r\n        return (\r\n            <div className=\"md-form md-outline m-0\">\r\n                <label className={hasValue ? 'active' : ''} data-l10n-id={filterItem.Title}></label>\r\n                <select className=\"browser-default custom-select\" value={filterItem.Multiple === 'Y' ? this.state.value : (this.state.value.length < 1 ? '' : this.state.value[0])} onChange={this.onChangeValue} multiple={filterItem.Multiple === 'Y'}>\r\n                    {filterItem.Items.map((item) => (\r\n                        <option key={item.id} value={item.id} data-l10n-id={item.name}></option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterFieldUserSelect extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: [],\r\n            description: [],\r\n            loaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const objValue = this.context.value;\r\n        this.setState({\r\n            value: objValue && objValue.value ? objValue.value : [],\r\n            description: objValue && objValue.description ? objValue.description : [],\r\n            loaded: true\r\n        });\r\n    }\r\n\r\n    onChange() {\r\n        const result = { ...this.state };\r\n        this.context.onChange(result, this.context.filterItem);\r\n    }\r\n\r\n    onChangeValue = (e) => {\r\n        const value = [];\r\n        const description = [];\r\n\r\n        if (e) {\r\n            value.push(e.value);\r\n            description.push(e.label);\r\n        }\r\n        this.setState({\r\n            value: value,\r\n            description: description\r\n        }, this.onChange);\r\n    }\r\n\r\n    render() {\r\n        const filterItem = this.context.filterItem;\r\n        const val = this.state.value.length > 0 ? {\r\n            value: this.state.value[0],\r\n            label: this.state.description.length > 0 ? this.state.description[0] : '',\r\n        } : false;\r\n        return (\r\n            <div className=\"form-outline m-0\">\r\n                {this.state.loaded &&\r\n                    <UserSelect title={filterItem.Title} value={val} onChange={this.onChangeValue} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterFieldDealSelect extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: [],\r\n            description: [],\r\n            loaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const objValue = this.context.value;\r\n        this.setState({\r\n            value: objValue && objValue.value ? objValue.value : [],\r\n            description: objValue && objValue.description ? objValue.description : [],\r\n            loaded: true\r\n        });\r\n    }\r\n\r\n    onChange() {\r\n        const result = { ...this.state };\r\n        this.context.onChange(result, this.context.filterItem);\r\n    }\r\n\r\n    onChangeValue = (e) => {\r\n        const value = [];\r\n        const description = [];\r\n\r\n        if (e) {\r\n            value.push(e.value);\r\n            description.push(e.label);\r\n        }\r\n        this.setState({\r\n            value: value,\r\n            description: description\r\n        }, this.onChange);\r\n    }\r\n\r\n    render() {\r\n        const filterItem = this.context.filterItem;\r\n        const val = this.state.value.length > 0 ? {\r\n            value: this.state.value[0],\r\n            label: this.state.description.length > 0 ? this.state.description[0] : '',\r\n        } : false;\r\n        return (\r\n            <div className=\"form-outline m-0\">\r\n                {this.state.loaded &&\r\n                    <DealSelect title={filterItem.Title} value={val} onChange={this.onChangeValue} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterFieldContactSelect extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: [],\r\n            description: [],\r\n            loaded: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const objValue = this.context.value;\r\n        this.setState({\r\n            value: objValue && objValue.value ? objValue.value : [],\r\n            description: objValue && objValue.description ? objValue.description : [],\r\n            loaded: true\r\n        });\r\n    }\r\n\r\n    onChange() {\r\n        const result = { ...this.state };\r\n        this.context.onChange(result, this.context.filterItem);\r\n    }\r\n\r\n    onChangeValue = (e) => {\r\n        const value = [];\r\n        const description = [];\r\n\r\n        if (e) {\r\n            value.push(e.value);\r\n            description.push(e.label);\r\n        }\r\n        this.setState({\r\n            value: value,\r\n            description: description\r\n        }, this.onChange);\r\n    }\r\n\r\n    render() {\r\n        const filterItem = this.context.filterItem;\r\n        const val = this.state.value.length > 0 ? {\r\n            value: this.state.value[0],\r\n            label: this.state.description.length > 0 ? this.state.description[0] : '',\r\n        } : false;\r\n        return (\r\n            <div className=\"form-outline m-0\">\r\n                {this.state.loaded &&\r\n                    <ContactSelect title={filterItem.Title} value={val} onChange={this.onChangeValue} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n/*\r\nclass FilterFieldBooleanSelect extends React.Component {\r\n    static contextType = FilterFieldContext;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: [],\r\n            description: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const objValue = this.context.value;\r\n        this.setState({\r\n            value: objValue && objValue.value ? objValue.value : []\r\n        });\r\n    }\r\n\r\n    onChange() {\r\n        const result = {...this.state };\r\n        this.context.onChange(result, this.context.filterItem);\r\n    }\r\n\r\n    onChangeValue = (e) => {\r\n        const value = [];\r\n        const description = [];\r\n\r\n        Array.from(e.target.selectedOptions, option => {\r\n            if(option.value && option.value === 'true') {\r\n                value.push(true);\r\n                description.push(option.text);\r\n            }\r\n            if(option.value && option.value === 'false') {\r\n                value.push(false);\r\n                description.push(option.text);\r\n            }\r\n        });\r\n        this.setState({\r\n            value: value,\r\n            description: description\r\n        }, this.onChange);\r\n    }\r\n\r\n    render() {\r\n        const _ = this;\r\n        const filterItem = this.context.filterItem;\r\n        const hasValue = this.state.value.length > 0;\r\n        return (\r\n            <div className=\"md-form md-outline m-0\">\r\n                <label className={hasValue ? 'active' : ''} data-l10n-id={filterItem.Title}></label>\r\n                <select className=\"browser-default custom-select\" value={this.state.value.length > 0 ? this.state.value[0] : ''} onChange={this.onChangeValue} multiple={filterItem.Multiple === 'Y'}>\r\n                    <option></option>\r\n                    <option value={true} data-l10n-id=\"main-yes\"></option>\r\n                    <option value={false} data-l10n-id=\"main-no\"></option>\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\nexport default FilterField;","import FilterRangeType from './filterRangeType';\r\n\r\nclass FilterDefaults {\r\n    constructor() {\r\n        this.Filters = [];\r\n        this.Table = '';\r\n    }\r\n\r\n    get(name, callback) {\r\n        const _ = this;\r\n        switch (name) {\r\n            case 'filter-devices':\r\n                _.Table = name;\r\n                _.devices(callback);\r\n                return;\r\n            case 'filter-programs':\r\n                _.Table = name;\r\n                _.programs(callback);\r\n                return;\r\n        }\r\n        callback();\r\n    }\r\n\r\n    programs(callback) {\r\n        const _ = this;\r\n        document.l10n.formatValue('filter-default-programs-active').then((resolve) => {\r\n            _.Filters.push({\r\n                name: resolve,\r\n                fields: [{\r\n                    value: { value: '0', type: FilterRangeType.GreaterThan, description: ['> 0'] },\r\n                    title: 'field-used-on-devices',\r\n                    name: 'usage'\r\n                }]\r\n            });\r\n            _.tryAddFilter(callback);\r\n        });\r\n    }\r\n\r\n    devices(callback) {\r\n        const _ = this;\r\n        document.l10n.formatValue('filter-default-devices-in-progress').then((resolve) => {\r\n            _.Filters.push({\r\n                name: resolve,\r\n                fields: [{\r\n                    value: false,\r\n                    title: 'field-growth-program',\r\n                    name: 'programId'\r\n                }]\r\n            });            \r\n            document.l10n.formatValue('field-harvesting').then((resolve) => {                \r\n                document.l10n.formatValue('date-today').then((resolveToday) => {\r\n                    _.Filters.push({\r\n                        name: resolve,\r\n                        fields: [{\r\n                            value: { period: FilterRangeType.Today, type: FilterRangeType.Period, description: [resolveToday] },\r\n                            title: 'field-harvesting',\r\n                            name: 'harvestDate'\r\n                        }]\r\n                    });\r\n                    _.tryAddFilter(callback);\r\n                })\r\n            });\r\n        });\r\n    }\r\n\r\n    tryAddFilter(callback) {\r\n        const _ = this;\r\n        if(_.Filters.length < 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        _.addFilter(_.Filters[0].name, _.Filters[0].fields, function () {\r\n            _.Filters.splice(0, 1);\r\n            _.tryAddFilter(callback);\r\n        });\r\n    }\r\n\r\n    addFilter(filterName, filterFields, callback) {\r\n        const _ = this;\r\n        const rd = {\r\n            table: _.Table,\r\n            name: filterName,\r\n            data: JSON.stringify(filterFields),\r\n            default: 'Y'\r\n        };\r\n\r\n        //todo\r\n\r\n        callback();\r\n        return;\r\n        /*\r\n        $.post('/filter/edit', rd, (result) => {\r\n            if (result.error) {\r\n                console.log(result.error_description);\r\n            }\r\n            callback();\r\n        }).fail((err) => {\r\n            console.error('err', err);\r\n            callback();\r\n        });*/\r\n    }\r\n}\r\n\r\nexport default FilterDefaults;","class Utils {\r\n    static saveToLocalStorage(key: string, value: any) {\r\n        try {\r\n            localStorage.setItem(key, JSON.stringify(value));\r\n        }\r\n        catch (err) {\r\n            console.warn(err)\r\n        }\r\n    }\r\n\r\n    static getFromLocalStorage(key: string) {\r\n        try {\r\n            const value = localStorage.getItem(key);\r\n            if (value) {\r\n                return JSON.parse(value);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(err);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static getStringArray(str: string): string[] {\r\n        var result: string[] = [];\r\n        if (!str)\r\n            return result;\r\n        var array = str.toString().split(';');\r\n        for (var i in array) {\r\n            result.push(array[i]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static tryParseJson(text: string) {\r\n        if (!text || text.length < 1)\r\n            return false;\r\n        var obj = {};\r\n        try {\r\n            obj = JSON.parse(text);\r\n        }\r\n        catch (e) {\r\n            console.warn(text);\r\n            console.warn(e);\r\n            obj = false;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    static getArrayTimeFromSeconds(totalSeconds: number) {\r\n        const hours = Math.round(totalSeconds / 3600);\r\n        const mins = Math.round((totalSeconds - hours * 3600) / 60);\r\n        const seconds = totalSeconds % 60;\r\n        return [hours, mins, seconds];\r\n    }\r\n\r\n    static secondsToString(value: number) {\r\n        var hours = Math.floor(value / 60 / 60);\r\n        var minutes = Math.floor(value / 60) - (hours * 60);\r\n        var seconds = value % 60;\r\n        if (hours < 1) {\r\n            return [\r\n                minutes.toString().padStart(2, '0'),\r\n                seconds.toString().padStart(2, '0')\r\n            ].join(':');\r\n        }\r\n        return [\r\n            hours.toString().padStart(2, '0'),\r\n            minutes.toString().padStart(2, '0'),\r\n            seconds.toString().padStart(2, '0')\r\n        ].join(':');\r\n    }\r\n\r\n    static convertFileBase64 = (file: any) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file)\r\n            fileReader.onload = () => {\r\n                if (fileReader.result && typeof fileReader.result === 'string') {\r\n                    resolve(fileReader.result?.split(',')[1]);\r\n                }\r\n            }\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static getError(err: any) {\r\n        if (err.response) {\r\n            return err.response.data;\r\n        }\r\n        return err;\r\n    }\r\n\r\n    static searchPrefix(value: string) {\r\n        return `<${value}>`;\r\n    }\r\n}\r\n\r\nexport default Utils;","export enum DataStorage {\r\n    settings = \"settings\",\r\n    log = \"log\",\r\n    filter = \"filter\",\r\n    filterSort = \"filtersort\"\r\n}","import React from \"react\";\r\nimport { Trans } from 'react-i18next';\r\nimport i18next from 'i18next';\r\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\nimport Moment from 'moment';\r\nimport FilterField from './filterField';\r\nimport FilterDefaults from './filterDefaults';\r\nimport FilterType from './filterType';\r\nimport { AppContext } from '../../context/app.context';\r\nimport { FilterFieldContext } from './filterFieldContext';\r\nimport FilterRangeType from './filterRangeType';\r\nimport Utils from '../../utils';\r\nimport { DataStorage } from '../../enum/dataStorage';\r\nimport { Rest } from \"../../rest\";\r\n\r\nclass Filter extends React.Component {\r\n    static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            loadedFilters: {},\r\n            requestParams: [],\r\n            editMode: false,\r\n            showFieldsVisibility: false,\r\n            currentFilterId: '',\r\n            editFilter: false,\r\n            editFilterName: '',\r\n            filterSorting: false\r\n        };\r\n        this.findTimestamp = 0;\r\n        this.findDelay = 700;\r\n        this.filterContainer = React.createRef();\r\n        this.inputText = React.createRef();\r\n        const typingIndex = props.items.findIndex(x => x.Typing === 'Y');\r\n        if (typingIndex > -1) {\r\n            this.TypingFilterItem = props.items[typingIndex];\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const _ = this;\r\n        _.loadFilters(function () {\r\n            _.loadStateParams();\r\n        });\r\n    }\r\n\r\n    getFilterItemByName = (name) => {\r\n        const index = this.props.items.findIndex(x => x.Name === name);\r\n        if (index < 0)\r\n            return false;\r\n        return this.props.items[index];\r\n    }\r\n\r\n    loadFilters(callback, loadDefault) {\r\n        const _ = this;\r\n        _.loadFiltersRequest(function (entities, sorting) {\r\n            if (entities.length < 1 && !loadDefault) {\r\n                new FilterDefaults().get(_.props.id, function () {\r\n                    _.loadFilters(callback, true);\r\n                });\r\n                return;\r\n            }\r\n            _.loadFiltersEndAction(entities, sorting, callback);\r\n        }, function () {\r\n            _.loadFiltersEndAction([], [], callback);\r\n        });\r\n    }\r\n\r\n    loadFiltersRequest(resolve, reject) {\r\n        const _ = this;\r\n        var items = [];\r\n        const rd = {\r\n            ENTITY: DataStorage.filter,\r\n            FILTER: {\r\n                PROPERTY_TABLE: _.props.id,\r\n                PROPERTY_USER: _.context.getCurrentUser().Id\r\n            }\r\n        };\r\n        Rest.callMethod('entity.item.get', rd, true).then(data => {\r\n            items = data.items.map(x => new FilterModel(x));\r\n            _.loadFiltersSorting(function (sorting) {\r\n                resolve(items, sorting);\r\n            });\r\n        }).catch(err => {\r\n            const error = err.ex ? err.ex : err;\r\n            console.error('error-get-filters', error);\r\n            reject();\r\n        });\r\n\r\n        /*$.get(`/filter/list/${this.props.id}`, (result) => {\r\n            const items = [];\r\n            if (result.items && Array.isArray(result.items)) {\r\n                result.items.forEach((item) => {\r\n                    items.push({ ...item, data: JSON.parse(item.data) });\r\n                });\r\n            }\r\n            const sorting = result.sorting && Array.isArray(result.sorting) ? result.sorting : [];\r\n            resolve(items, sorting);\r\n        }).fail((err) => {\r\n            console.error('load filter error', err);\r\n            reject();\r\n        });*/\r\n    }\r\n\r\n    loadFiltersSorting(callback) {\r\n        const _ = this;\r\n        const sorting = [];\r\n        const rd = {\r\n            ENTITY: DataStorage.filterSort,\r\n            FILTER: {\r\n                PROPERTY_TABLE: _.props.id,\r\n                PROPERTY_USER: _.context.getCurrentUser().Id\r\n            }\r\n        };\r\n\r\n        Rest.callMethod('entity.item.get', rd, true).then(data => {\r\n            if (data.items.length < 1) {\r\n                callback(sorting);\r\n                return;\r\n            }\r\n            callback(Utils.tryParseJson(data.items[0].PROPERTY_VALUES.DATA) || []);\r\n        }).catch(err => {\r\n            const error = err.ex ? err.ex : err;\r\n            console.error('error-get-filters-sort', error);\r\n            callback(sorting);\r\n        });\r\n    }\r\n\r\n    loadFiltersEndAction(entities, sorting, callback) {\r\n        const _ = this;\r\n        const ids = [];\r\n        const result = [];\r\n        sorting.forEach(function (id) {\r\n            const item = entities.find(x => x.id === id);\r\n            if (item) {\r\n                ids.push(item.id);\r\n                result.push(item);\r\n            }\r\n        });\r\n        entities.filter(x => !ids.includes(x.id)).forEach(function (item) {\r\n            result.push(item);\r\n            ids.push(item.id);\r\n        });\r\n        const loadedFilters = {};\r\n        result.forEach(function (item) {\r\n            loadedFilters[item.id] = item;\r\n        });\r\n        this.setState({\r\n            loadedFilters: loadedFilters,\r\n            filterSorting: ids\r\n        }, callback);\r\n    }\r\n\r\n    saveSortingRequest = () => {\r\n        const _ = this;\r\n        const rd = {\r\n            ENTITY: DataStorage.filterSort,\r\n            FILTER: {\r\n                PROPERTY_TABLE: _.props.id,\r\n                PROPERTY_USER: _.context.getCurrentUser().Id\r\n            }\r\n        };\r\n\r\n        Rest.callMethod('entity.item.get', rd, true).then(result => {\r\n            if (result.items.length < 1) {\r\n                Rest.callMethod('entity.item.add', {\r\n                    ENTITY: DataStorage.filterSort,\r\n                    NAME: DataStorage.filterSort,\r\n                    PROPERTY_VALUES: {\r\n                        TABLE: _.props.id,\r\n                        DATA: JSON.stringify(this.state.filterSorting),\r\n                        USER: _.context.getCurrentUser().Id\r\n                    }\r\n                }).catch(err => {\r\n                    console.error('saveSortingRequest add', err);\r\n                });\r\n            }\r\n            else {\r\n                Rest.callMethod('entity.item.update', {\r\n                    ENTITY: DataStorage.filterSort,\r\n                    ID: result.items[0].ID,\r\n                    PROPERTY_VALUES: {\r\n                        DATA: JSON.stringify(this.state.filterSorting)\r\n                    }\r\n                }).catch(err => {\r\n                    console.error('saveSortingRequest update', err);\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.error('saveSortingRequest', err);\r\n        });\r\n\r\n        /*\r\n        $.post('/filter/sorting', {\r\n            table: this.props.id,\r\n            data: this.state.filterSorting\r\n        }, (result) => {\r\n            console.log('save sort', result);\r\n        });*/\r\n    }\r\n\r\n    loadStateParams() {\r\n        const _ = this;\r\n        if (_.props.query) {\r\n            const queryArray = [];\r\n            Object.keys(_.props.query).forEach((key) => {\r\n                const item = _.getFilterItemByName(key);\r\n                if (item) {\r\n                    queryArray.push({\r\n                        name: key,\r\n                        title: item.Title,\r\n                        value: {\r\n                            value: [_.props.query[key]],\r\n                            description: [_.props.query[key]]\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            if (queryArray.length > 0) {\r\n                _.setState({\r\n                    currentFilterId: '',\r\n                    requestParams: queryArray\r\n                }, _.find);\r\n                return;\r\n            }\r\n        }\r\n\r\n        const stateString = _.getFromLocalStorage(`${_.props.id}`);\r\n        if (!stateString) {\r\n            _.find();\r\n            return;\r\n        }\r\n        const result = Utils.tryParseJson(stateString);\r\n        _.setState({\r\n            currentFilterId: result.currentFilterId ? result.currentFilterId : '',\r\n            requestParams: Array.isArray(result.requestParams) ? result.requestParams.slice() : []\r\n        }, _.find);\r\n    }\r\n\r\n    clickFind = (e) => {\r\n        if (e) e.preventDefault();\r\n        this.closeModal();\r\n        this.find();\r\n    }\r\n\r\n    clickReset = () => {\r\n        this.setState({\r\n            currentFilterId: ''\r\n        });\r\n        this.removeRequestParams();\r\n        //filter.clearModal();\r\n        this.closeModal();\r\n        this.find();\r\n    }\r\n\r\n    clickClear = (e) => {\r\n        if (e) e.preventDefault();\r\n        this.setState({\r\n            currentFilterId: ''\r\n        });\r\n        this.removeRequestParams(true);\r\n        this.find();\r\n    }\r\n\r\n    removeRequestParams = (all = false) => {\r\n        this.setState({\r\n            requestParams: this.state.requestParams.map((item) => {\r\n                if (item.title || all) {\r\n                    item.value = false;\r\n                }\r\n                return item;\r\n            })\r\n        });\r\n    }\r\n\r\n    clickCreateFilterMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n            currentFilterId: 'new'\r\n        });\r\n    }\r\n\r\n    clickEditMode = () => {\r\n        const currentFilter = this.state.loadedFilters[this.state.currentFilterId];\r\n        if (currentFilter) {\r\n            this.setState({\r\n                editFilterName: currentFilter.name,\r\n                editMode: true\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                currentFilterId: '',\r\n                editMode: true\r\n            });\r\n        }\r\n    }\r\n\r\n    clickRemoveUserFilters = () => {\r\n        const _ = this;\r\n        _.removeLoadedFilters(function () {\r\n            new FilterDefaults().get(_.props.id, function () {\r\n                _.loadFilters(() => {\r\n                    _.clickCancel();\r\n                }, true);\r\n            });\r\n        });\r\n    }\r\n\r\n    removeLoadedFilters(callback) {\r\n        const _ = this;\r\n        const keys = Object.keys(_.state.loadedFilters);\r\n        if (keys.length < 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        const ids = keys.filter(x => _.state.loadedFilters[x].default);\r\n\r\n        if (ids.length < 1) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        _.removeFilterRequest(ids).then(() => {\r\n            callback();\r\n        });\r\n    }\r\n\r\n    find(e) {\r\n        const _ = this;\r\n        const timestamp = new Date().getTime();\r\n        _.findTimestamp = timestamp;\r\n        setTimeout(function () {\r\n            if (_.findTimestamp !== timestamp)\r\n                return;\r\n            _.findAction();\r\n        }, _.findDelay);\r\n    }\r\n\r\n    findAction() {\r\n        this.trySaveStateParams();\r\n        this.props.refreshTable();\r\n    }\r\n\r\n    trySaveStateParams() {\r\n        try {\r\n            this.saveInLocalStorage(`${this.props.id}`, JSON.stringify({\r\n                currentFilterId: this.state.currentFilterId,\r\n                requestParams: this.state.requestParams\r\n            }));\r\n        }\r\n        catch (err) {\r\n            console.error('save filter params', err);\r\n        }\r\n    }\r\n\r\n    openModal = () => {\r\n        const _ = this;\r\n        this.setState({ showModal: true }, () => { _.inputText.current.focus() });\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ showModal: !this.state.showModal });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    getModalStyle() {\r\n        return {\r\n            overlay: {\r\n                backgroundColor: 'transparent'\r\n            },\r\n            content: {\r\n                top: this.filterContainer.current.offsetTop + 40,\r\n                left: this.filterContainer.current.offsetLeft,\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                width: this.filterContainer.current.offsetWidth,\r\n                padding: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    openModalFields = (e) => {\r\n        console.log('openModalFields', e);\r\n        this.setState({\r\n            showFieldsVisibility: true\r\n        });\r\n    }\r\n\r\n    loadFilterDefaultFields = (e) => {\r\n        if (e) e.preventDefault();\r\n        const _ = this;\r\n        const requestParams = this.state.requestParams;\r\n        _.props.items.forEach((item) => {\r\n            const index = requestParams.findIndex(x => x.name === item.Name);\r\n            if (index < 0 && (item.Typing || item.Default)) {\r\n                requestParams.push({\r\n                    name: item.Name,\r\n                    value: false\r\n                });\r\n            }\r\n            if (index > -1 && !item.Typing && !item.Default) {\r\n                requestParams.splice(index, 1);\r\n            }\r\n        });\r\n        _.setState({\r\n            requestParams: requestParams\r\n        });\r\n    }\r\n\r\n    saveFilterRequest = (id, name) => {\r\n        const _ = this;\r\n        const rd = {\r\n            ENTITY: DataStorage.filter,\r\n            NAME: name,\r\n            PROPERTY_VALUES: {\r\n                TABLE: _.props.id,\r\n                DATA: JSON.stringify(_.state.requestParams),\r\n                DEFAULT: 'N',\r\n                USER: _.context.getCurrentUser().Id\r\n            }\r\n        };\r\n\r\n        if (id) {\r\n            rd.ID = id;\r\n            Rest.callMethod('entity.item.update', rd).then(result => {\r\n                _.loadFilters(() => {\r\n                    _.setState({\r\n                        editMode: false\r\n                    });\r\n                    _.clickSelectFilter(false, id);\r\n                });\r\n            }).catch(err => {\r\n                console.error('saveFilterRequest', err);\r\n            });\r\n        }\r\n        else {\r\n            Rest.callMethod('entity.item.add', rd).then(result => {\r\n                _.loadFilters(() => {\r\n                    _.setState({\r\n                        editMode: false\r\n                    });\r\n                    _.clickSelectFilter(false, result.items[0]);\r\n                });\r\n            }).catch(err => {\r\n                console.error('saveFilterRequest', err);\r\n            });\r\n        }\r\n    }\r\n\r\n    clickSave = () => {\r\n        const editFilterName = this.state.editFilterName.trim();\r\n        if (editFilterName.length < 1) {\r\n            return;\r\n        }\r\n        if (this.state.currentFilterId === 'new') {\r\n            this.saveFilterRequest(false, editFilterName);\r\n        }\r\n        else {\r\n            const id = parseInt(this.state.currentFilterId) || 0;\r\n            if (id > 0) {\r\n                this.saveFilterRequest(id, editFilterName);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    editMode: false\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    clickCancel = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n    }\r\n\r\n    clickSaveFieldsVisibility = (values) => {\r\n        if (values) {\r\n            const requestParams = this.state.requestParams.filter(x => values.includes(x.name) || (this.TypingFilterItem && this.TypingFilterItem.Name === x.name));\r\n            values.forEach((item) => {\r\n                const index = requestParams.findIndex(x => x.name === item);\r\n                if (index < 0) {\r\n                    requestParams.push({\r\n                        value: false,\r\n                        name: item\r\n                    });\r\n                }\r\n            });\r\n            this.setState({\r\n                requestParams: requestParams,\r\n                showFieldsVisibility: false\r\n            });\r\n            return;\r\n        }\r\n        this.setState({\r\n            showFieldsVisibility: false\r\n        });\r\n    }\r\n    saveInLocalStorage(key, value) {\r\n        try {\r\n            localStorage.setItem(key, value);\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n    }\r\n\r\n    getFromLocalStorage(key) {\r\n        try {\r\n            return localStorage.getItem(key);\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clickRemovePresetFilter = (e) => {\r\n        const requestParams = this.state.requestParams;\r\n        requestParams.forEach((item) => {\r\n            item.value = false;\r\n        });\r\n        this.setState({\r\n            currentFilterId: '',\r\n            requestParams: requestParams\r\n        }, this.find());\r\n    }\r\n\r\n    clickRemovePresetParam = (e, params) => {\r\n        const requestParams = this.state.requestParams;\r\n        const index = requestParams.findIndex(x => x.name === params.name);\r\n        if (index > -1) {\r\n            requestParams[index].value = false;\r\n            this.setState({\r\n                requestParams: requestParams\r\n            }, this.find());\r\n        }\r\n    }\r\n\r\n    clickRemovePresetMore = (e, arrMore) => {\r\n        this.setState({\r\n            requestParams: this.state.requestParams.filter(x => !arrMore.find(more => more.name === x.name))\r\n        });\r\n    }\r\n\r\n    clickRemoveField = (name) => {\r\n        this.setState({\r\n            requestParams: this.state.requestParams.filter(x => x.name !== name)\r\n        });\r\n    }\r\n\r\n    changeValue = (value, filterItem) => {\r\n        const requestParams = this.state.requestParams;\r\n        const index = requestParams.findIndex(x => x.name === filterItem.Name);\r\n        if (index > -1) {\r\n            requestParams[index].title = filterItem.Title;\r\n            requestParams[index].value = value;\r\n            this.setState({\r\n                requestParams: requestParams\r\n            });\r\n        }\r\n    }\r\n\r\n    changeTextInput = (e) => {\r\n        const _ = this;\r\n        if (_.TypingFilterItem) {\r\n            const requestParams = _.state.requestParams.slice();\r\n            const index = requestParams.findIndex(x => x.name === _.TypingFilterItem.Name);\r\n            if (index < 0 && e.target.value.length > 0) {\r\n                requestParams.push({\r\n                    value: e.target.value,\r\n                    name: _.TypingFilterItem.Name\r\n                });\r\n            }\r\n            else {\r\n                if (e.target.value.length > 0) {\r\n                    requestParams[index] = {\r\n                        value: e.target.value,\r\n                        name: _.TypingFilterItem.Name\r\n                    };\r\n                }\r\n                else {\r\n                    requestParams.splice(index, 1);\r\n                }\r\n            }\r\n            _.setState({\r\n                requestParams: requestParams,\r\n                showModal: false\r\n            }, _.find);\r\n        }\r\n    }\r\n\r\n    changeEditFilterName = (e) => {\r\n        if (e) e.preventDefault();\r\n\r\n        this.setState({\r\n            editFilterName: e.target.value\r\n        });\r\n    }\r\n\r\n    clickSelectFilter = (e, id) => {\r\n        if (e) e.preventDefault();\r\n        console.log('clickSelectFilter', id);\r\n        this.setState({\r\n            currentFilterId: id,\r\n            editFilter: false,\r\n            editFilterName: this.state.loadedFilters[id].name,\r\n            requestParams: this.state.loadedFilters[id].data.map(x => ({ ...x }))\r\n        });\r\n    }\r\n\r\n    clickEditFilterName = (e, id) => {\r\n        if (e) e.preventDefault();\r\n        const _ = this;\r\n        _.setState({\r\n            editFilter: true,\r\n            editFilterName: _.state.loadedFilters[id].name\r\n        });\r\n    }\r\n\r\n    clickRemoveFilter = (e, id) => {\r\n        if (e) e.preventDefault();\r\n        const _ = this;\r\n        _.removeFilterRequest([id]).then(() => {\r\n            _.loadFilters(() => {\r\n            });\r\n        });\r\n    }\r\n\r\n    async removeFilterRequest(ids) {\r\n        const _ = this;\r\n        for (const id of ids) {\r\n            try {\r\n                await Rest.callMethod('entity.item.delete', { ENTITY: DataStorage.filter, ID: id });\r\n            }\r\n            catch (err) {\r\n                console.error('removeFilterRequest', err);\r\n            }\r\n        }\r\n        if (ids.includes(_.state.currentFilterId)) {\r\n            _.setState({\r\n                currentFilterId: ''\r\n            });\r\n        }\r\n        _.setState({\r\n            filterSorting: _.state.filterSorting.filter(x => !ids.includes(x))\r\n        });\r\n    }\r\n\r\n    fillRequestFilter(requestFilter) {\r\n        const filter = this;\r\n        filter.props.items.forEach((item) => {\r\n            let upperName = item.Name;\r\n            switch (item.Type) {\r\n                case FilterType.Hidden:\r\n                    let arValues = Utils.getStringArray(filter.getValueByName(item.Name));\r\n                    if (arValues && arValues.length > 0) {\r\n                        if (item.PREFIX == 'Y') {\r\n                            filter.addValueToRequestFilter(requestFilter, `%${upperName}`, arValues[0]);\r\n                        }\r\n                        else {\r\n                            filter.addValueToRequestFilter(requestFilter, upperName, arValues);\r\n                        }\r\n                    }\r\n                    break;\r\n                case FilterType.Text:\r\n                    const textValue = filter.getValueByName(item.Name);\r\n                    if (textValue && textValue.value.length > 0) {\r\n                        filter.addValueToRequestFilter(requestFilter, upperName, textValue.value[0]);\r\n                    }\r\n                    break\r\n                case FilterType.NumberRange:\r\n                    const numberRangeValue = filter.getValueByName(item.Name);\r\n                    if (numberRangeValue) {\r\n                        if (numberRangeValue.from) {\r\n                            filter.addValueToRequestFilter(requestFilter, `>=${upperName}`, numberRangeValue.from);\r\n                        }\r\n                        if (numberRangeValue.to) {\r\n                            filter.addValueToRequestFilter(requestFilter, `<=${upperName}`, numberRangeValue.to);\r\n                        }\r\n                        if (numberRangeValue.value) {\r\n                            switch (numberRangeValue.type) {\r\n                                case FilterRangeType.GreaterThan:\r\n                                    filter.addValueToRequestFilter(requestFilter, `>${upperName}`, numberRangeValue.value);\r\n                                    break;\r\n                                case FilterRangeType.LessThan:\r\n                                    filter.addValueToRequestFilter(requestFilter, `<${upperName}`, numberRangeValue.value);\r\n                                    break;\r\n                                default:\r\n                                    filter.addValueToRequestFilter(requestFilter, `${upperName}`, numberRangeValue.value);\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case FilterType.DateRange:\r\n                    const dateRangeValue = filter.getValueByName(item.Name);\r\n                    if (dateRangeValue) {\r\n                        if (dateRangeValue.from) {\r\n                            filter.addValueToRequestFilter(requestFilter, `>=${upperName}`, item.NUMBER ? new Date(dateRangeValue.from).getTime() : new Date(dateRangeValue.from).toISOString());\r\n                        }\r\n                        if (dateRangeValue.to) {\r\n                            filter.addValueToRequestFilter(requestFilter, `<=${upperName}`, item.NUMBER ? new Date(dateRangeValue.to).getTime() : new Date(dateRangeValue.to).toISOString());\r\n                        }\r\n                        if (dateRangeValue.value) {\r\n                            switch (dateRangeValue.type) {\r\n                                case FilterRangeType.GreaterThan:\r\n                                    filter.addValueToRequestFilter(requestFilter, `>=${upperName}`, item.NUMBER ? new Date(dateRangeValue.value).getTime() : new Date(dateRangeValue.value).toISOString());\r\n                                    break;\r\n                                case FilterRangeType.LessThan:\r\n                                    filter.addValueToRequestFilter(requestFilter, `<=${upperName}`, item.NUMBER ? new Date(dateRangeValue.value).getTime() : new Date(dateRangeValue.value).toISOString());\r\n                                    break;\r\n                                default:\r\n                                    filter.addValueToRequestFilter(requestFilter, `${upperName}`, item.NUMBER ? new Date(dateRangeValue.value).getTime() : new Date(dateRangeValue.value).toISOString());\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (dateRangeValue.period) {\r\n                            switch (dateRangeValue.period) {\r\n                                case FilterRangeType.Today:\r\n                                    filter.addValueToRequestFilter(requestFilter, `>=${upperName}`, item.NUMBER ? Moment().startOf('day').valueOf() : Moment().format(Moment.HTML5_FMT.DATE));\r\n                                    filter.addValueToRequestFilter(requestFilter, `<=${upperName}`, item.NUMBER ? Moment().startOf('day').add(1, 'day').valueOf() : Moment().add(1, 'day').format(Moment.HTML5_FMT.DATE));\r\n                                    break;\r\n                                case FilterRangeType.Yesterday:\r\n                                    filter.addValueToRequestFilter(requestFilter, `>=${upperName}`, item.NUMBER ? Moment().startOf('day').subtract(1, 'day').valueOf() : Moment().subtract(1, 'day').format(Moment.HTML5_FMT.DATE));\r\n                                    filter.addValueToRequestFilter(requestFilter, `<=${upperName}`, item.NUMBER ? Moment().startOf('day').valueOf() : Moment().format(Moment.HTML5_FMT.DATE));\r\n                                    break;\r\n                                case FilterRangeType.Week:\r\n                                    filter.addValueToRequestFilter(requestFilter, `>=${upperName}`, item.NUMBER ? Moment().subtract(7, 'day').valueOf() : Moment().subtract(7, 'day').format(Moment.HTML5_FMT.DATE));\r\n                                    filter.addValueToRequestFilter(requestFilter, `<=${upperName}`, item.NUMBER ? Moment().add(1, 'day').valueOf() : Moment().add(1, 'day').format(Moment.HTML5_FMT.DATE));\r\n                                    break;\r\n                                case FilterRangeType.Month:\r\n                                    filter.addValueToRequestFilter(requestFilter, `>=${upperName}`, item.NUMBER ? Moment().subtract(30, 'day').valueOf() : Moment().subtract(30, 'day').format(Moment.HTML5_FMT.DATE));\r\n                                    filter.addValueToRequestFilter(requestFilter, `<=${upperName}`, item.NUMBER ? Moment().add(1, 'day').valueOf() : Moment().add(1, 'day').format(Moment.HTML5_FMT.DATE));\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case FilterType.Select:\r\n                case FilterType.DealSelect:\r\n                case FilterType.ContactSelect:\r\n                case FilterType.UserSelect:\r\n                    const selectValue = filter.getValueByName(item.Name);\r\n                    if (selectValue && selectValue.value && selectValue.value.length > 0) {\r\n                        filter.addValueToRequestFilter(requestFilter, `${upperName}`, selectValue.value);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n        return requestFilter;\r\n    }\r\n\r\n    getValueByName(name) {\r\n        var index = this.state.requestParams.findIndex(x => x.name === name);\r\n        if (index < 0)\r\n            return false;\r\n\r\n        return this.state.requestParams[index].value;\r\n    }\r\n\r\n    addValueToRequestFilter(requestFilter, name, value) {\r\n        if (value || value === 0) {\r\n            requestFilter[name] = value;\r\n        }\r\n    }\r\n\r\n    onSortFields = (data, e) => {\r\n        if (data.oldIndex === data.newIndex)\r\n            return;\r\n        this.setState({\r\n            requestParams: arrayMove(this.state.requestParams, data.oldIndex, data.newIndex)\r\n        });\r\n    }\r\n\r\n    onSortFilters = (data, e) => {\r\n        if (data.oldIndex === data.newIndex)\r\n            return;\r\n        this.setState({\r\n            filterSorting: arrayMove(this.state.filterSorting, data.oldIndex, data.newIndex)\r\n        }, this.saveSortingRequest);\r\n    }\r\n\r\n    compareFilterFields() {\r\n        if (!this.state.currentFilterId || !this.state.loadedFilters[this.state.currentFilterId])\r\n            return false;\r\n        const fields = this.state.requestParams;\r\n        const filterFields = this.state.loadedFilters[this.state.currentFilterId].data;\r\n        var result = true;\r\n        fields.forEach(field => {\r\n            var index = filterFields.findIndex(x => x.name === field.name);\r\n            if (index < 0 && field.value) {\r\n                result = false;\r\n                return false;\r\n            }\r\n            if (filterFields[index] && JSON.stringify(field.value) !== JSON.stringify(filterFields[index].value)) {\r\n                result = false;\r\n                return false;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const _ = this;\r\n        var currentFilter = _.state.currentFilterId && _.state.loadedFilters[_.state.currentFilterId] && _.compareFilterFields() ? _.state.loadedFilters[_.state.currentFilterId] : false;\r\n        var hasValue = false;\r\n        var hasPreset = false;\r\n        var buffer = [];\r\n        var inputTextValue = '';\r\n        _.state.requestParams.slice().reverse().forEach(function (params) {\r\n            if ((!params.value && params.value !== false))\r\n                return;\r\n            if (!params.title && params.value !== false) {\r\n                hasValue = true;\r\n                inputTextValue = params.value;\r\n                return;\r\n            }\r\n            if (params.value.description && Array.isArray(params.value.description) && params.value.description.length < 1) {\r\n                return;\r\n            }\r\n            buffer.push(params);\r\n        });\r\n        const arrPresetItems = [];\r\n        if (currentFilter) {\r\n            arrPresetItems.push((\r\n                <div className=\"filter-preset-item\" key={currentFilter.id} title={currentFilter.name}>\r\n                    <span className=\"filter-preset-item-text\">{currentFilter.name}</span>\r\n                    <span className=\"preset-remove\" onClick={this.clickRemovePresetFilter}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </span>\r\n                </div>\r\n            ));\r\n            hasPreset = true;\r\n        }\r\n        else {\r\n            var arrMore = [];\r\n            var arrPreset = buffer.filter(x => {\r\n                if (x.value === false || x.value.length < 1) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            arrPreset.forEach(function (params) {\r\n                if (arrPresetItems.length > 2) {\r\n                    arrMore.push(params);\r\n                    return;\r\n                }\r\n                arrPresetItems.push((\r\n                    <div className=\"filter-preset-item\" key={params.name}>\r\n                        {params.value.description && Array.isArray(params.value.description) &&\r\n                            <span className=\"filter-preset-item-text\" title={params.value.description.join(', ')}>\r\n                                <span><Trans>{params.title}</Trans></span>: <span>{params.value.description.join(', ')}</span>\r\n                            </span>\r\n                        }\r\n                        <span className=\"preset-remove\" onClick={(e) => _.clickRemovePresetParam(e, params)}>\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </span>\r\n                    </div>\r\n                ));\r\n                hasPreset = true;\r\n            });\r\n            if (arrMore.length > 0) {\r\n                arrPresetItems.push((\r\n                    <div className=\"filter-preset-item\" key=\"more\">\r\n                        <span className=\"filter-preset-item-text\"><Trans>filter-preset-more</Trans> {arrMore.length}</span>\r\n                        <span className=\"preset-remove\" onClick={(e) => _.clickRemovePresetMore(e, arrMore)}>\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </span>\r\n                    </div>\r\n                ));\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"filter-search\" ref={this.filterContainer}>\r\n                {arrPresetItems.map((item) => (\r\n                    item\r\n                ))}\r\n                <input type=\"text\" ref={this.inputText} name=\"find\" value={inputTextValue} className=\"filter-search-text\" autoComplete=\"off\"\r\n                    onChange={this.changeTextInput} onClick={this.toggleModal}\r\n                    placeholder={i18next.t(hasPreset ? 'filter-find-not-empty' : 'filter-find-empty')} />\r\n                <div className=\"main-ui-item-icon-block\">\r\n                    <span className=\"main-ui-item-icon\" onClick={this.clickFind}>\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </span>\r\n                    {(hasValue || hasPreset) &&\r\n                        <span className=\"main-ui-item-icon\" onClick={this.clickClear}>\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </span>\r\n                    }\r\n                </div>\r\n                {this.state.showModal &&\r\n                    <div className=\"filter-modal\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-xl-3 d-fl ex flex-col umn\">\r\n                                <div className=\"main-ui-filter-sidebar-title\">\r\n                                    <h5 className=\"main-ui-filter-sidebar-title-item\"><Trans>filter-title-filters</Trans></h5>\r\n                                </div>\r\n                                <div className={`${this.state.filterSorting && this.state.filterSorting.length > 0 ? 'flex-grow-1' : ''} main-ui-filter-sidebar-item-container`}>\r\n                                    <SortableFilterList helperClass='sortable-helper' lockAxis='y' useDragHandle={true} pressDelay={200}\r\n                                        editMode={this.state.editMode} editFilter={this.state.editFilter} editFilterName={this.state.editFilterName}\r\n                                        items={this.state.filterSorting}\r\n                                        loadedFilters={this.state.loadedFilters}\r\n                                        currentFilterId={this.state.currentFilterId} currentFilter={currentFilter}\r\n                                        onSortEnd={this.onSortFilters} changeEditFilterName={this.changeEditFilterName} clickSelectFilter={this.clickSelectFilter} clickEditFilterName={this.clickEditFilterName} clickRemoveFilter={this.clickRemoveFilter} />\r\n                                    {this.state.editMode && _.state.currentFilterId === 'new' &&\r\n                                        <div className=\"main-ui-filter-sidebar-item main-ui-filter-ne w-filter\">\r\n                                            <div className=\"main-ui-filter-edit-mask\">\r\n                                                <input type=\"text\" className=\"main-ui-filter-sidebar-edit-control\" placeholder={i18next.t('filter-name')} value={this.state.editFilterName} onChange={this.changeEditFilterName} />\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"d-flex px-2 mt-2\">\r\n                                    {!this.state.editMode &&\r\n                                        <span className=\"main-ui-filter-add-item flex-grow-1\" onClick={this.clickCreateFilterMode}>\r\n                                            <i className=\"fas fa-plus me-1\"></i>\r\n                                            <span><Trans>filter-btn-save-filter</Trans></span>\r\n                                        </span>\r\n                                    }\r\n                                    {!this.state.editMode &&\r\n                                        <span className=\"main-ui-filter-add-edit\" title={i18next.t('filter-btn-edit-filter')} onClick={this.clickEditMode}>\r\n                                            <i className=\"fas fa-cog mt-1\"></i>\r\n                                        </span>\r\n                                    }\r\n                                    {this.state.editMode &&\r\n                                        <span className=\"main-ui-filter-reset-link mb-2\" onClick={this.clickRemoveUserFilters}>\r\n                                            <i className=\"fas fa-reply me-1\"></i>\r\n                                            <span><Trans>filter-btn-reset-filter</Trans></span>\r\n                                        </span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"d-block d-xl-none\">\r\n                                    <hr className=\"my-2\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-xl-9\">\r\n                                {!this.state.showFieldsVisibility &&\r\n                                    <React.Fragment>\r\n                                        <div className=\"d-flex flex-column flex-gro w-1\">\r\n                                            <SortableFieldList helperClass='sortable-helper' lockAxis='y' useDragHandle={true} pressDelay={200} currentFilterId={this.state.currentFilterId} items={this.state.requestParams} getFilterItemByName={this.getFilterItemByName} onSortEnd={this.onSortFields} onChangeValue={this.changeValue} onClickRemove={this.clickRemoveField} />\r\n                                            <div className=\"d-flex justify-content-center mt-2 mb-3\">\r\n                                                <span className=\"main-ui-filter-field-add-item\" onClick={this.openModalFields}><Trans>filter-btn-add-field</Trans></span>\r\n                                                <span className=\"main-ui-filter-field-restore-items\" onClick={this.loadFilterDefaultFields}><Trans>filter-btn-restore-fields</Trans></span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"\">\r\n                                            <div className=\"d-flex justify-content-center\">\r\n                                                {!this.state.editMode &&\r\n                                                    <div className=\"mb-2\">\r\n                                                        <button className=\"btn btn-primary btn-md me-2\" onClick={this.clickFind}>\r\n                                                            <i className=\"fas fa-search me-2\"></i>\r\n                                                            <span><Trans>filter-btn-search</Trans></span>\r\n                                                        </button>\r\n                                                        <button className=\"btn btn-outline-primary btn-md\" onClick={this.clickReset}><Trans>filter-btn-reset</Trans></button>\r\n                                                    </div>\r\n                                                }\r\n                                                {this.state.editMode &&\r\n                                                    <div className=\"mb-2\">\r\n                                                        <button className=\"btn btn-success btn-md me-2\" onClick={this.clickSave}><Trans>filter-btn-save</Trans></button>\r\n                                                        <button className=\"btn btn-outline-success btn-md\" onClick={this.clickCancel}><Trans>filter-btn-cancel</Trans></button>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                }\r\n                                {this.state.showFieldsVisibility &&\r\n                                    <FilterVisibility items={this.props.items} requestParams={this.state.requestParams} save={this.clickSaveFieldsVisibility} />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DragHanle = SortableHandle(() => <div className=\"main-ui-item-icon main-ui-filter-icon-grab\" title={i18next.t('filter-sort-filter')}><i className=\"fas fa-bars\"></i></div>);\r\n\r\nclass SortableField extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex mb-3\">\r\n                <DragHanle />\r\n                <div className=\"flex-grow-1\">\r\n                    <FilterFieldContext.Provider value={{ value: this.props.item.value, filterItem: this.props.filterItem, onChange: this.props.onChangeValue, language: Rest.getLang() }}>\r\n                        <FilterField />\r\n                    </FilterFieldContext.Provider>\r\n                </div>\r\n                <div className=\"main-ui-item-icon pe-2 me-1\" onClick={() => this.props.onClickRemove(this.props.item.name)}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SortableFieldItem = SortableElement(SortableField);\r\n\r\nclass SortableFields extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='mt-3'>\r\n                {this.props.items.map((item, index) => {\r\n                    const filterItem = this.props.getFilterItemByName(item.name);\r\n                    if (filterItem && filterItem.Type !== FilterType.Hidden) {\r\n                        return (\r\n                            <SortableFieldItem key={`${item.name}_${this.props.currentFilterId}`} index={index} item={item} filterItem={filterItem} onChangeValue={this.props.onChangeValue} onClickRemove={this.props.onClickRemove} />\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SortableFieldList = SortableContainer(SortableFields);\r\n\r\nclass SortableFilter extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={`d-flex main-ui-filter-sidebar-item ${this.props.currentFilter && this.props.currentFilterId == this.props.id ? 'main-ui-filter-current-item' : ''}`}>\r\n                <DragHanle />\r\n                {(this.props.editFilter && this.props.currentFilterId == this.props.id)\r\n                    ?\r\n                    <div className=\"flex-grow-1 p-2 main-ui-filter-sidebar-item-text-container\">\r\n                        <input type=\"text\" className=\"main-ui-filter-sidebar-item-input\" placeholder={i18next.t('filter-name')} autoFocus={true} value={this.props.editFilterName} onChange={this.props.changeEditFilterName} />\r\n                    </div>\r\n                    :\r\n                    <div className=\"flex-grow-1 p-2 main-ui-filter-sidebar-item-text-container\" onClick={(e) => this.props.clickSelectFilter(e, this.props.id)}>\r\n                        <span className=\"main-ui-filter-sidebar-item-text\">\r\n                            {this.props.filter.name}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                {this.props.editMode &&\r\n                    <React.Fragment>\r\n                        <div className=\"main-ui-item-icon main-ui-filter-icon-edit\" title={i18next.t('filter-edit-filter-name')} onClick={(e) => this.props.clickEditFilterName(e, this.props.id)}>\r\n                            <i className=\"fas fa-pen\"></i>\r\n                        </div>\r\n                        <div className=\"main-ui-item-icon main-ui-delete main-ui-filter-filter-delete\" title={i18next.t('filter-delete-filter')} onClick={(e) => this.props.clickRemoveFilter(e, this.props.id)}>\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SortableFilterItem = SortableElement(SortableFilter);\r\n\r\nclass SortableFilters extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.items && this.props.items.map((id, index) => (\r\n                    <SortableFilterItem key={id} index={index} id={id} currentFilter={this.props.currentFilter} currentFilterId={this.props.currentFilterId} editMode={this.props.editMode} editFilter={this.props.editFilter}\r\n                        editFilterName={this.props.editFilterName} changeEditFilterName={this.props.changeEditFilterName} clickSelectFilter={this.props.clickSelectFilter}\r\n                        filter={this.props.loadedFilters[id]}\r\n                        clickEditFilterName={this.props.clickEditFilterName} clickRemoveFilter={this.props.clickRemoveFilter} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SortableFilterList = SortableContainer(SortableFilters);\r\n\r\nclass FilterVisibility extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        const selected = [];\r\n        if (props.requestParams && Array.isArray(props.requestParams)) {\r\n            props.requestParams.forEach((item) => {\r\n                if (item.name) {\r\n                    selected.push(item.name);\r\n                }\r\n            });\r\n        }\r\n        this.state = {\r\n            selected: selected\r\n        };\r\n    }\r\n\r\n    clickSaveFields = () => {\r\n        this.props.save(this.state.selected);\r\n    }\r\n\r\n    clickCancelFields = () => {\r\n        this.props.save(false);\r\n    }\r\n\r\n    select = (name) => {\r\n        const selected = this.state.selected;\r\n        const index = selected.indexOf(name);\r\n        if (index < 0) {\r\n            selected.push(name);\r\n        }\r\n        else {\r\n            selected.splice(index, 1);\r\n        }\r\n        this.setState({\r\n            selected: selected\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"d-flex flex-column flex-grow-1\">\r\n                    <div className=\"row px-3\">\r\n                        {this.props.items.map((item) => {\r\n                            if (item.Type !== FilterType.Hidden) {\r\n                                return (\r\n                                    <div key={item.Name} className={`col-6 main-ui-select-inner-item main-ui-filter-field-list-item ${this.state.selected.includes(item.Name) ? 'main-ui-checked' : ''}`} onClick={() => this.select(item.Name)}>\r\n                                        <div className=\"main-ui-select-inner-label\">\r\n                                            <Trans>{item.Title}</Trans>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-center mb-2\">\r\n                        <button className=\"btn btn-success btn-md me-2\" onClick={this.clickSaveFields}><Trans>filter-btn-save</Trans></button>\r\n                        <button className=\"btn btn-outline-success btn-md\" onClick={this.clickCancelFields}><Trans>filter-btn-cancel</Trans></button>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterModel {\r\n    constructor(fields) {\r\n        Object.assign(this, fields);\r\n\r\n        this.id = parseInt(fields.ID) || 0;\r\n        this.table = fields.PROPERTY_VALUES.TABLE;\r\n        this.name = fields.NAME;\r\n        this.user = parseInt(fields.PROPERTY_VALUES.USER) || 0;\r\n        this.data = JSON.parse(fields.PROPERTY_VALUES.DATA);\r\n        this.default = fields.PROPERTY_VALUES.DEFAULT === 'Y';\r\n    }\r\n}\r\n\r\nexport default Filter;","export enum ObjectType {\r\n    document = 'document',\r\n    user = 'user'\r\n}","class FilterItem {\r\n    constructor(type, name, title, additionalParams){\r\n        this.Type = type;\r\n        this.Name = name;\r\n        this.Title = title;\r\n        this.ContainerClassName = '';\r\n        if(additionalParams){\r\n            let keys = Object.keys(additionalParams);\r\n            for(let i in keys){\r\n                let key = keys[i];\r\n                this[key] = additionalParams[key];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default FilterItem;","class TableStyle {\r\n    constructor() {\r\n        this.default = 'default';\r\n        this.block = 'block';\r\n        this.smallBlock = 'smallblock';\r\n    }\r\n\r\n    getList(excludes) {\r\n        const result = [\r\n            { id: this.default, icon: 'fas fa-bars' },\r\n            { id: this.block, icon: 'fas fa-th-large' },\r\n            { id: this.smallBlock, icon: 'fas fa-th' }\r\n        ];\r\n        if(excludes) {\r\n            return result.filter(x => !excludes.includes(x.id));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default new TableStyle();","import React from \"react\";\r\n\r\nexport default class Loader extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"flex-center py-3\">\r\n                <div className=\"spinner-grow text-primary me-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-secondary me-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-success me-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger me-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning me-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-info\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport i18next from 'i18next';\r\nimport { Trans } from 'react-i18next';\r\nimport Select from 'react-select';\r\nimport { MDBCheckbox, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBDropdownItem, MDBDropdownLink } from 'mdb-react-ui-kit';\r\nimport TableStyle from \"./tableStyle\";\r\nimport Loader from '../loader';\r\nimport Utils from '../../utils';\r\nimport { Rest } from \"../../rest\";\r\nimport lodash from 'lodash';\r\n\r\nclass TableComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.Id = 'table-component';\r\n        this.state = {\r\n            items: [],\r\n            total: 0,\r\n            currentPage: 1,\r\n            filter: false,\r\n            showOnPage: true,\r\n            onPage: 10,\r\n            editColumns: true,\r\n            sortBy: 'id',\r\n            sortOrder: 'desc',\r\n            visibleColumns: [],\r\n            showColumnVisibility: false,\r\n            selectedItems: [],\r\n            groupAction: false,\r\n            filterKeysLenght: 0,\r\n            messages: {\r\n                empty: 'data-not-found',\r\n                filterEmpty: 'data-not-found'\r\n            },\r\n            firstLoadComplete: false,\r\n            loading: true\r\n        };\r\n        this.Header = [];\r\n        this.GroupActions = [];\r\n        this.localSaveTimestamp = 0;\r\n    }\r\n\r\n    getComponentId() {\r\n        return this.Id;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTableSettings();\r\n    }\r\n\r\n    loadTableSettings() {\r\n        const settings = Utils.getFromLocalStorage(`${this.getComponentId()}-settings`);\r\n        if (settings) {\r\n            this.setState(settings);\r\n        }\r\n    }\r\n\r\n    trySaveTableSettings() {\r\n        const timestamp = new Date().getTime();\r\n        const _ = this;\r\n        _.localSaveTimestamp = timestamp;\r\n        setTimeout(() => {\r\n            if (timestamp !== _.localSaveTimestamp) {\r\n                return;\r\n            }\r\n            _.saveTableSettings();\r\n        }, 400);\r\n    }\r\n\r\n    saveTableSettings() {\r\n        Utils.saveToLocalStorage(`${this.getComponentId()}-settings`, {\r\n            onPage: this.state.onPage,\r\n            visibleColumns: this.state.visibleColumns,\r\n            sortBy: this.state.sortBy,\r\n            sortOrder: this.state.sortOrder\r\n        });\r\n    }\r\n\r\n    loadData() {\r\n        throw 'not override in child';\r\n    }\r\n\r\n    getBlockView(item) {\r\n        throw 'not override in child';\r\n    }\r\n\r\n    getSmallBlockView(item) {\r\n        throw 'not override in child';\r\n    }\r\n\r\n    loadDataError(err) {\r\n        console.error('loadDataError', err);\r\n        this.setState({\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    loadDataAlways() {\r\n        if (!this.state.firstLoadComplete) {\r\n            this.setState({\r\n                firstLoadComplete: true\r\n            });\r\n        }\r\n        Rest.resizeFrame();\r\n    }\r\n\r\n    tryLoadData() {\r\n        this.setState({\r\n            loading: true\r\n        }, () => {\r\n            this.loadData();\r\n        });\r\n    }\r\n\r\n    applyFilter(filterData) {\r\n        if (this.state.filter) {\r\n            this.state.filter.fillRequestFilter(filterData);\r\n            this.setState({\r\n                filterKeysLenght: Object.keys(filterData).length\r\n            });\r\n        }\r\n        if (this.props.filter) {\r\n            this.props.filter.current.fillRequestFilter(filterData);\r\n            this.setState({\r\n                filterKeysLenght: Object.keys(filterData).length\r\n            });\r\n        }\r\n    }\r\n\r\n    setFilter(filter) {\r\n        const _ = this;\r\n        _.setState({ filter: filter }, () => {\r\n            _.state.filter.FilterContainer.on('filter:find', function () {\r\n                _.tryLoadData();\r\n            });\r\n        });\r\n    }\r\n\r\n    getChunk(data) {\r\n        if (!data) return [];\r\n        const currentDefinition = this;\r\n        const chunk = currentDefinition.state.currentPage % (50 / currentDefinition.state.onPage) || (50 / currentDefinition.state.onPage);\r\n        return lodash.chunk(data, currentDefinition.state.onPage)[chunk - 1] || []\r\n    }\r\n\r\n    printRows(items, total) {\r\n        items = this.getChunk(items);\r\n        this.setState({\r\n            loading: false,\r\n            items: items,\r\n            selectedItems: [],\r\n            total: total\r\n        });\r\n        if (!this.state.firstLoadComplete) {\r\n            this.setState({\r\n                firstLoadComplete: true\r\n            });\r\n        }\r\n    }\r\n\r\n    getDropdownContent(buttons, className = 'shadow-0 px-3', iconClassName = 'fas fa-bars') {\r\n        return (\r\n            <MDBDropdown>\r\n                <MDBDropdownToggle className={className} color='white'><i className={iconClassName}></i></MDBDropdownToggle>\r\n                <MDBDropdownMenu>\r\n                    {buttons.map((btn, i) => (\r\n                        <MDBDropdownItem key={i}>\r\n                            {btn}\r\n                        </MDBDropdownItem>\r\n                    ))}\r\n                </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n        );\r\n    }\r\n\r\n    getDropdownCell(buttons, id) {\r\n        return (\r\n            <td className=\"align-middle px-0\">\r\n                {this.getDropdownContent(buttons, id)}\r\n            </td>\r\n        );\r\n    };\r\n\r\n    selectRow = (id) => {\r\n        if (this.state.selectedItems.includes(id)) {\r\n            this.setState({\r\n                selectedItems: this.state.selectedItems.filter(x => x !== id)\r\n            });\r\n        }\r\n        else {\r\n            var { selectedItems } = this.state;\r\n            selectedItems.push(id);\r\n            this.setState({\r\n                selectedItems: selectedItems\r\n            });\r\n        }\r\n    }\r\n\r\n    selectAll = (e) => {\r\n        var { selectedItems } = this.state;\r\n        if (selectedItems.length === this.state.items.length) {\r\n            this.setState({\r\n                selectedItems: []\r\n            });\r\n            return;\r\n        }\r\n        this.state.items.forEach(function (item) {\r\n            if (!selectedItems.includes(item.id)) {\r\n                selectedItems.push(item.id);\r\n            }\r\n        });\r\n        this.setState({\r\n            selectedItems: selectedItems\r\n        });\r\n    }\r\n\r\n    getSelectAllCell = function () {\r\n        return (\r\n            <th className=\"align-middle\">\r\n                <MDBCheckbox id=\"row-all\" checked={this.isSelectedAll()} onChange={(e) => this.selectAll(e)} />\r\n            </th>\r\n        );\r\n    }\r\n\r\n    isSelected = (id) => {\r\n        const { selectedItems } = this.state;\r\n        return selectedItems.includes(id);\r\n    }\r\n\r\n    isSelectedAll = () => {\r\n        const { items, selectedItems } = this.state;\r\n        return items.length > 0 && items.length === selectedItems.length;\r\n    }\r\n\r\n    getSelectRowContent(id) {\r\n        return (\r\n            <MDBCheckbox name={`row-${id}`} id={`row-${id}`} checked={this.isSelected(id)} onChange={() => this.selectRow(id)} />\r\n        );\r\n    }\r\n\r\n    getSelectRowCell(id) {\r\n        return (\r\n            <td className=\"align-middle\">\r\n                {this.getSelectRowContent(id)}\r\n            </td>\r\n        );\r\n    }\r\n\r\n    getOffset() {\r\n        return ((this.state.currentPage - 1) * this.getStep());\r\n    };\r\n\r\n    getStep() {\r\n        if (this.state.showOnPage) {\r\n            return this.state.onPage;\r\n        }\r\n        return 10;\r\n    };\r\n\r\n    changeOnPage = (value) => {\r\n        if (this.state.onPage === value) {\r\n            return;\r\n        }\r\n        const _ = this;\r\n        _.setState({ onPage: value, currentPage: 1 }, () => {\r\n            _.trySaveTableSettings();\r\n            _.tryLoadData();\r\n        });\r\n    }\r\n\r\n    clickPaging = (value) => {\r\n        if (value === '...')\r\n            return;\r\n        if (this.state.currentPage === value) {\r\n            return;\r\n        }\r\n        const _ = this;\r\n        _.setState({ currentPage: value }, () => {\r\n            _.tryLoadData();\r\n        });\r\n    }\r\n\r\n    clickSort = (e, field) => {\r\n        const _ = this;\r\n        if (this.state.sortBy === field) {\r\n            this.setState({\r\n                sortOrder: this.state.sortOrder === 'asc' ? 'desc' : 'asc'\r\n            }, () => {\r\n                _.trySaveTableSettings();\r\n                _.tryLoadData();\r\n            });\r\n            return;\r\n        }\r\n        this.setState({\r\n            sortBy: field,\r\n            sortOrder: 'desc'\r\n        }, () => {\r\n            _.trySaveTableSettings();\r\n            _.tryLoadData();\r\n        });\r\n    }\r\n\r\n    clickEditColumnsVisibility = () => {\r\n        this.setState({ showColumnVisibility: !this.state.showColumnVisibility });\r\n    }\r\n\r\n    clickShowColumn = (e, field) => {\r\n        e.preventDefault();\r\n        const visibleColumns = this.state.visibleColumns;\r\n\r\n        const index = visibleColumns.indexOf(field);\r\n        if (index > -1) {\r\n            visibleColumns.splice(index, 1);\r\n        }\r\n        else {\r\n            visibleColumns.push(field);\r\n        }\r\n        const _ = this;\r\n        this.setState({ visibleColumns: visibleColumns }, () => {\r\n            _.trySaveTableSettings();\r\n        });\r\n    }\r\n\r\n    getArrayPagination = (num, limit, range) => {\r\n        range = range || 3;\r\n        var arr = [];\r\n        for (let i = 1; i <= limit; i++) {\r\n            if (i <= range || (i > num - range / 2 && i < num + range / 2) || i > limit - range) {\r\n                if (arr[arr.length - 1] && i != arr[arr.length - 1] + 1)\r\n                    arr.push('...');\r\n                arr.push(i);\r\n            }\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    changeGroupAction(e) {\r\n        this.setState({ groupAction: e.target.value });\r\n    }\r\n\r\n    clickApplyGroupAction = () => {\r\n        const _ = this;\r\n        const item = _.GroupActions.find(x => x.id === _.state.groupAction);\r\n        if (item) {\r\n            _.btnGroupAction.setAttribute(\"disabled\", \"disabled\");\r\n            item.action(function () {\r\n                _.btnGroupAction.removeAttribute(\"disabled\");\r\n            });\r\n        }\r\n    }\r\n\r\n    getEmptyView = () => {\r\n        return (\r\n            <div className=\"default-block table-empty-block p-2 p-lg-3\">\r\n                <i className=\"fas fa-exclamation-triangle fa-2x me-2 text-danger\"></i>\r\n                <span className=\"ms-2 ms-lg-3\">\r\n                    <Trans>{this.state.filterKeysLenght > 0 ? this.state.messages.filterEmpty : this.state.messages.empty}</Trans>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getLoadingView = () => {\r\n        return (\r\n            <div className=\"default-block table-empty-block p-2 p-lg-3 text-center\">\r\n                <Loader />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.firstLoadComplete)\r\n            return this.getLoadingView();\r\n\r\n        if (this.state.items.length < 1)\r\n            return this.getEmptyView();\r\n\r\n        var lastPage = Math.floor(this.state.total / this.getStep());\r\n        if (this.state.total % this.getStep() > 0)\r\n            lastPage += 1;\r\n        const arPagination = this.getArrayPagination(this.state.currentPage, lastPage, 3);\r\n\r\n        const groupActions = [];\r\n\r\n        if (this.GroupActions.length > 0 && this.state.selectedItems.length > 0) {\r\n            groupActions.push({\r\n                value: '', label: i18next.t('table-select-group-action')\r\n            });\r\n            this.GroupActions.forEach((item, index) => {\r\n                groupActions.push({\r\n                    value: item.id, label: i18next.t(item.textId)\r\n                });\r\n            });\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.style === TableStyle.block &&\r\n                    <div className=\"row\">\r\n                        {this.state.items.map((item, index) => (\r\n                            <React.Fragment key={index}>\r\n                                {this.getBlockView(item)}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                }\r\n                {this.props.style === TableStyle.smallBlock &&\r\n                    <div className=\"row\">\r\n                        {this.state.items.map((item, index) => (\r\n                            <React.Fragment key={index}>\r\n                                {this.getSmallBlockView(item)}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                }\r\n                {(this.props.style === TableStyle.default || !this.props.style) &&\r\n                    <div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        {this.Header.map((headerItem, i) => {\r\n                                            if (headerItem.field && !headerItem.alwaysVisible && !this.state.visibleColumns.includes(headerItem.field))\r\n                                                return;\r\n                                            if (headerItem.getHeaderObject) {\r\n                                                return (\r\n                                                    <React.Fragment key={i}>\r\n                                                        {headerItem.getHeaderObject()}\r\n                                                    </React.Fragment>\r\n                                                );\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <th key={i} className={headerItem.sortable ? 'align-middle sortable' : 'align-middle'} onClick={(e) => headerItem.sortable ? this.clickSort(e, headerItem.field) : false}>\r\n                                                        {headerItem.icon &&\r\n                                                            <i className={headerItem.icon}></i>\r\n                                                        }\r\n                                                        {headerItem.text_id &&\r\n                                                            <span>\r\n                                                                <Trans>{headerItem.text_id}</Trans>\r\n                                                            </span>\r\n                                                        }\r\n                                                        {headerItem.sortable && this.state.sortBy !== headerItem.field &&\r\n                                                            <i className=\"fas fa-angle-down ms-1\"></i>\r\n                                                        }\r\n                                                        {this.state.sortBy == headerItem.field &&\r\n                                                            <i className={this.state.sortOrder !== 'asc' ? 'fas fa-angle-down ms-1' : 'fas fa-angle-up ms-1'}></i>\r\n                                                        }\r\n                                                    </th>\r\n                                                )\r\n                                            }\r\n                                        })}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.items.map((item, index) => (\r\n                                        <tr key={item.id}>\r\n                                            {this.Header.map((headerItem, i) => {\r\n                                                if (headerItem.field && !headerItem.alwaysVisible && !this.state.visibleColumns.includes(headerItem.field))\r\n                                                    return;\r\n                                                return (\r\n                                                    <React.Fragment key={i}>\r\n                                                        {headerItem.getCellObject(item)}\r\n                                                    </React.Fragment>\r\n                                                );\r\n                                            })}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {this.GroupActions.length > 0 && this.state.selectedItems.length > 0 &&\r\n                    <div className=\"table-group-actions\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-lg-8 col-xl-5\">\r\n                                <div className=\"d-flex\">\r\n                                    <Select className=\"w-100\" defaultValue={this.state.groupAction ? this.state.groupAction : groupActions[0]} onChange={(e) => this.changeGroupAction(e)} options={groupActions}></Select>\r\n                                    {this.state.groupAction.length > 0 &&\r\n                                        <button className=\"btn btn-success m-0 ms-2 py-1\" ref={ref => this.btnGroupAction = ref} onClick={this.clickApplyGroupAction}><Trans>btn-apply</Trans></button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className=\"row my-3\">\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        {arPagination.length > 0 &&\r\n                            <div className=\"table-pagination d-flex\">\r\n                                {arPagination.map((item, index) => (\r\n                                    <button key={index} disabled={item === '...' ? true : false} className={item == this.state.currentPage ? 'active' : ''} onClick={() => this.clickPaging(item)}>{item}</button>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    {this.state.showOnPage &&\r\n                        <div className=\"col-12 col-lg-6 table-on-page d-flex flex-row-reverse\">\r\n                            {this.state.editColumns &&\r\n                                <MDBDropdown>\r\n                                    <MDBDropdownToggle className=\"shadow-0\" color='light'><i className=\"fas fa-cog\"></i></MDBDropdownToggle>\r\n                                    <MDBDropdownMenu>\r\n                                        {this.Header.map((headerItem, i) => {\r\n                                            if (headerItem.alwaysVisible)\r\n                                                return;\r\n                                            if (headerItem.field) {\r\n                                                return (\r\n                                                    <MDBDropdownItem key={i}>\r\n                                                        <MDBDropdownLink tag=\"button\" type=\"button\" className={this.state.visibleColumns.includes(headerItem.field) ? 'active' : ''} onClick={(e) => this.clickShowColumn(e, headerItem.field)}>\r\n                                                            <Trans>{headerItem.text_id}</Trans>\r\n                                                        </MDBDropdownLink>\r\n                                                    </MDBDropdownItem>\r\n                                                );\r\n                                            }\r\n                                        })}\r\n                                    </MDBDropdownMenu>\r\n                                </MDBDropdown>\r\n                            }\r\n                            {[50, 25, 10].map((item, i) => (\r\n                                <button className={item == this.state.onPage ? 'active' : ''} key={i} onClick={() => this.changeOnPage(item)}>{item}</button>\r\n                            ))}\r\n                            <span><Trans>table-on-page</Trans></span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableComponent;","import moment from \"moment\";\r\n\r\nexport default class Log {\r\n    constructor(fields) {\r\n        Object.assign(this, fields);\r\n    }\r\n\r\n    get Id() {\r\n        return parseInt(this.ID) || 0;\r\n    }\r\n\r\n    get Type() {\r\n        return this.PROPERTY_VALUES.TYPE;\r\n    }\r\n\r\n    get ObjectId() {\r\n        return this.PROPERTY_VALUES.OBJECT_ID;\r\n    }\r\n\r\n    get ObjectType() {\r\n        return this.PROPERTY_VALUES.OBJECT_TYPE;\r\n    }\r\n\r\n    get UserId() {\r\n        return parseInt(this.PROPERTY_VALUES.USER) || 0;\r\n    }\r\n\r\n    get Description() {\r\n        return this.PROPERTY_VALUES.DESCRIPTION;\r\n    }\r\n\r\n    get Date() {\r\n        return moment(parseInt(this.PROPERTY_VALUES.DATE) || 0);\r\n    }\r\n}","import { ObjectType } from \"../enum/objectType\";\r\n\r\nexport class LinkService {\r\n    static get(type: string, id: string = ''): string | boolean {\r\n        switch (type) {\r\n            case ObjectType.document:\r\n                return `/document/${id}`;\r\n            case ObjectType.user:\r\n                return `/user/${id}`;\r\n        }\r\n        return false;\r\n    }\r\n}","import { Trans } from 'react-i18next';\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataStorage } from \"../../enum/dataStorage\";\r\nimport { Rest } from \"../../rest\";\r\nimport TableComponent from './tableComponent';\r\nimport Log from '../../models/log';\r\nimport { LinkService } from '../../service/linkService';\r\n\r\nclass LogTable extends TableComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.Id = 'log-table-component';\r\n        this.state.sortBy = 'id';\r\n        this.state.visibleColumns = ['property_type', 'property_user', 'property_date'];\r\n        const currentDefinition = this;\r\n\r\n        this.Header.push({\r\n            text_id: 'field-id',\r\n            field: 'id',\r\n            sortable: true,\r\n            getCellObject: function (item) {\r\n                return (<td className=\"align-middle\">{item.ID}</td>);\r\n            }\r\n        });\r\n\r\n        this.Header.push({\r\n            text_id: 'field-event-type',\r\n            field: 'property_type',\r\n            getCellObject: function (item) {\r\n                const link = LinkService.get(item.ObjectType, item.ObjectId);\r\n                return (\r\n                    <td className=\"align-middle\">\r\n                        {item.Type.indexOf('delete') < 0 && link\r\n                            ? <Link to={link}><Trans>log-{item.Type}</Trans></Link>\r\n                            : <span><Trans>log-{item.Type}</Trans></span>}\r\n                    </td>\r\n                );\r\n            }\r\n        });\r\n\r\n        this.Header.push({\r\n            text_id: 'field-object-id',\r\n            field: 'property_object_id',\r\n            //sortable: true,\r\n            getCellObject: function (item) {\r\n                return (\r\n                    <td className=\"align-middle\">\r\n                        {item.ObjectId}\r\n                    </td>\r\n                );\r\n            }\r\n        });\r\n\r\n        this.Header.push({\r\n            text_id: 'field-description',\r\n            field: 'property_description',\r\n            //sortable: true,\r\n            getCellObject: function (item) {\r\n                return (\r\n                    <td className=\"align-middle\">\r\n                        {item.Description}\r\n                    </td>\r\n                );\r\n            }\r\n        });\r\n\r\n        this.Header.push({\r\n            text_id: 'field-user',\r\n            field: 'property_user',\r\n            getCellObject: function (item) {\r\n                return (\r\n                    <td className=\"align-middle\">\r\n                        {item.User &&\r\n                            item.User.LinkView\r\n                        }\r\n                    </td>\r\n                );\r\n            }\r\n        });\r\n\r\n        this.Header.push({\r\n            text_id: 'field-date',\r\n            field: 'property_date',\r\n            sortable: true,\r\n            getCellObject: function (item) {\r\n                return (\r\n                    <td className=\"align-middle\">\r\n                        {item.Date.format('L LTS')}\r\n                    </td>\r\n                );\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    loadData = async () => {\r\n        const currentDefinition = this;\r\n        const sortBy = currentDefinition.state.sortBy.toUpperCase();\r\n        const sortOrder = currentDefinition.state.sortOrder.toUpperCase();\r\n        var requestData = {\r\n            ENTITY: DataStorage.log,\r\n            SORT: {},\r\n            filter: {},\r\n            start: currentDefinition.getOffset()\r\n            //take: currentDefinition.getStep()\r\n        };\r\n        requestData.SORT[sortBy] = sortOrder;\r\n        currentDefinition.applyFilter(requestData.filter);\r\n\r\n        try {\r\n            const result = await Rest.callMethod('entity.item.get', requestData);\r\n            const items = result.items.map(x => new Log(x));\r\n            const userIds = [];\r\n            items.forEach((item) => {\r\n                if (!userIds.includes(item.UserId)) {\r\n                    userIds.push(item.UserId);\r\n                }\r\n            });\r\n            const users = await Rest.getUsers(userIds);\r\n            items.forEach(item => {\r\n                if (users[item.UserId]) {\r\n                    item.User = users[item.UserId];\r\n                }\r\n            });\r\n            currentDefinition.printRows(items, result.total);\r\n        }\r\n        catch (err) {\r\n            currentDefinition.loadDataError(err);\r\n        }\r\n        finally {\r\n            currentDefinition.loadDataAlways();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default LogTable;","import React from 'react';\r\nimport Filter from '../component/filter/filter';\r\nimport FilterItem from '../component/filter/filterItem';\r\nimport FilterType from '../component/filter/filterType';\r\nimport LogTable from '../component/table/logTable';\r\n\r\nexport default class LogPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.filterItems = [\r\n            new FilterItem(FilterType.Hidden, 'id', 'field-id', { Typing: 'Y', PREFIX: 'Y' }),\r\n            new FilterItem(FilterType.UserSelect, 'property_user', 'field-responsible', { Default: 'Y' }),\r\n            new FilterItem(FilterType.DateRange, 'property_date', 'field-date', { NUMBER: 'Y' })\r\n        ];\r\n\r\n        this.table = React.createRef();\r\n        this.filter = React.createRef();\r\n    }\r\n\r\n    refreshTable = () => {\r\n        if (this.table && this.table.current) {\r\n            this.table.current.tryLoadData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"d-xl-flex mb-3 mt-3\">\r\n                    <Filter ref={this.filter} id={'filter-log'} items={this.filterItems} refreshTable={this.refreshTable} />\r\n                </div>\r\n                <LogTable ref={this.table} filter={this.filter} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Trans } from \"react-i18next\";\r\nimport { Rest } from '../rest';\r\nimport { AppContext } from '../context/app.context';\r\nimport UserSelect from \"../component/select/user\";\r\nimport DomainAuthorization from \"../component/domainAuthorization\";\r\n\r\nexport default class SettingsPage extends React.Component {\r\n    static contextType = AppContext;\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoaded: false,\r\n            loading: true,\r\n            admins: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshData();\r\n    }\r\n\r\n    async refreshData() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        const users = await Rest.getUsers(this.context.settings.AdminList.Value);\r\n        const admins = [];\r\n\r\n        this.context.settings.AdminList.Value.forEach(id => {\r\n            if (users[id]) {\r\n                admins.push({ value: users[id].Id, label: users[id].FullName });\r\n            }\r\n        });\r\n        this.setState({\r\n            loading: false,\r\n            admins: admins\r\n        }, () => {\r\n            Rest.resizeFrame()\r\n        });\r\n    }\r\n\r\n    onAdminsChange = (selected) => {\r\n        this.setState({\r\n            admins: selected\r\n        });\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        if (e) e.preventDefault();\r\n        const _ = this;\r\n        const adminIds = _.state.admins.map(x => x.value);\r\n\r\n        if (adminIds.length > 0 && !adminIds.includes(_.context.getCurrentUser().Id)) {\r\n            adminIds.push(_.context.getCurrentUser().Id);\r\n        }\r\n        await _.context.setAppSettings('AdminList', adminIds);\r\n        await _.context.initAppSettings();\r\n        _.refreshData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-12 col-lg-8 col-xl-7 col-xxl-6\">\r\n                            <div><Trans>field-administrators</Trans></div>\r\n                            <div className=\"form-outline\">\r\n                                <UserSelect value={this.state.admins} onChange={this.onAdminsChange} isMulti={true} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {!this.loading &&\r\n                        <div className=\"mt-4\">\r\n                            <button type=\"submit\" className=\"btn btn-primary me-2\"><Trans>btn-save</Trans></button>\r\n                            <Link to=\"/\" className=\"btn btn-outline-primary\"><Trans>btn-cancel</Trans></Link>\r\n                        </div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    /* <hr />\r\n<div className=\"row mt-4\">\r\n    <div className=\"col-12 col-lg-8 col-xl-7 col-xxl-6\">\r\n        <DomainAuthorization />\r\n    </div>\r\n</div> */\r\n}","import React from \"react\";\r\nimport { Trans } from \"react-i18next\";\r\nimport axios from \"axios\";\r\nimport User from \"../models/user\";\r\nimport { Rest } from \"../rest\";\r\nimport Loader from \"./loader\";\r\n\r\ninterface IState {\r\n    isLoaded: boolean,\r\n    domainAuth?: User\r\n}\r\n\r\nexport default class DomainAuthorization extends React.Component<any, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkDomainAuth();\r\n    }\r\n\r\n    async checkDomainAuth() {\r\n        const currentUserAuthData = Rest.getAuth();\r\n        if (!currentUserAuthData)\r\n            return;\r\n\r\n        try {\r\n            const result = await axios.post('/domain/auth', currentUserAuthData);\r\n            const data = result.data;\r\n            this.setState({\r\n                isLoaded: true,\r\n                domainAuth: new User(data.domainAuth) || false\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.error('error checkDomainAuth', err);\r\n            this.setState({\r\n                isLoaded: true\r\n            });\r\n        }\r\n    }\r\n\r\n    sendAuthData = async () => {\r\n        const currentUserAuthData = Rest.getAuth();\r\n        if (!currentUserAuthData)\r\n            return;\r\n\r\n        currentUserAuthData.lang = Rest.getLang();\r\n\r\n        this.setState({\r\n            isLoaded: false\r\n        });\r\n\r\n        try {\r\n            const result = await axios.post('/domain/save', currentUserAuthData);\r\n            const data = result.data;\r\n            if (data.result) {\r\n                this.checkDomainAuth();\r\n            }\r\n            else {\r\n                console.error('error sendAuthData', data, result);\r\n                this.setState({\r\n                    isLoaded: true\r\n                });\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error('catch error sendAuthData', err);\r\n            this.setState({\r\n                isLoaded: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-xl-6\">\r\n                        <Loader />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"d-xl-flex\">\r\n                <div className=\"flex-grow-1\">\r\n                    {!this.state.domainAuth\r\n                        ?\r\n                        <div className=\"bg-warning shadow-1-strong p-2 text-white\">\r\n                            <Trans>msg-server-domain-not-authorized</Trans>\r\n                        </div>\r\n                        :\r\n                        <a className=\"d-block bg-success shadow-1-strong p-2 text-white\" href={this.state.domainAuth.Link} target=\"_blank\">\r\n                            <Trans>msg-server-domain-authorized</Trans>: {this.state.domainAuth.FullName}\r\n                        </a>\r\n                    }\r\n                </div>\r\n                <div className=\"ms-0 ms-xl-2 mt-2 mt-xl-0\">\r\n                    <button type=\"button\" className=\"btn btn-primary h-100\" onClick={this.sendAuthData}>\r\n                        <Trans>settings-send-user-auth-data</Trans>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { AppContext } from '../context/app.context';\r\nimport { DataStorage } from '../enum/dataStorage';\r\nimport { Rest } from '../rest';\r\n\r\nexport default class UpdatePage extends React.Component {\r\n    static contextType = AppContext;\r\n\r\n    constructor() {\r\n        super();\r\n        this.keys = [\r\n            'settings',\r\n            'PropSettingsValue',\r\n            'log',\r\n            'PropLogType',\r\n            'PropLogDate',\r\n            'PropLogUser',\r\n            'PropLogObjectId',\r\n            'PropLogObjectType',\r\n            'PropLogDescription',\r\n            'filter',\r\n            'PropFilterTable',\r\n            'PropFilterData',\r\n            'PropFilterDefault',\r\n            'PropFilterUser',\r\n            'filtersort',\r\n            'PropFilterSortTable',\r\n            'PropFilterSortData',\r\n            'PropFilterSortUser',\r\n            //'EventKeyONAPPINSTALL',\r\n            //'EventKeyONAPPUNINSTALL'\r\n        ];\r\n        //this.eventHandler = '';\r\n        this.events = [\r\n            'ONAPPINSTALL',\r\n            'ONAPPUNINSTALL'\r\n        ];\r\n        this.state = {\r\n            currentCount: 0,\r\n            allCount: this.keys.length\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createEntitySettings();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const _ = this;\r\n        const percent = _.getPercent();\r\n        if (percent === 100) {\r\n            _.context.setAppSettings('Version', _.context.appVersion).then(() => {\r\n                Rest.installComplete();\r\n                _.context.updateComplete();\r\n            });\r\n        }\r\n    }\r\n\r\n    getPercent() {\r\n        const _ = this;\r\n        var percent = 0;\r\n        if (_.state.allCount < 1) {\r\n            percent = 100;\r\n        }\r\n        else {\r\n            percent = _.state.currentCount / _.state.allCount * 100;\r\n        }\r\n        return percent;\r\n    }\r\n\r\n    addProgressKey(key) {\r\n        const _ = this;\r\n        _.setState({ currentCount: _.state.currentCount + 1 }, () => {\r\n            _.runAfterKey(key);\r\n        });\r\n    }\r\n\r\n    async runAfterKey(key) {\r\n        const _ = this;\r\n        switch (key) {\r\n            case 'settings':\r\n                _.createEntityLog();\r\n                break;\r\n            case 'log':\r\n                _.createEntityFilter();\r\n                break;\r\n            case 'filter':\r\n                _.createEntityFilterSort();\r\n                break;\r\n        }\r\n        //_.bindPlacements();\r\n        //_.bindEvents();\r\n    }\r\n\r\n    createEntitySettings() {\r\n        const _ = this;\r\n        const storageId = DataStorage.settings;\r\n\r\n        const propData = {\r\n            PropSettingsValue: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'VALUE', NAME: 'value', TYPE: 'S' }]\r\n        };\r\n        _.createEntity(storageId, propData);\r\n    }\r\n\r\n    createEntityLog() {\r\n        const _ = this;\r\n        const storageId = DataStorage.log;\r\n\r\n        const propData = {\r\n            PropLogType: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'TYPE', NAME: 'type', TYPE: 'S' }],\r\n            PropLogDate: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'DATE', NAME: 'date', TYPE: 'N' }],\r\n            PropLogUser: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'USER', NAME: 'user', TYPE: 'N' }],\r\n            PropLogObjectId: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'OBJECT_ID', NAME: 'object ID', TYPE: 'S' }],\r\n            PropLogObjectType: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'OBJECT_TYPE', NAME: 'object type', TYPE: 'S' }],\r\n            PropLogDescription: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'DESCRIPTION', NAME: 'descrpiption', TYPE: 'S' }]\r\n        };\r\n        _.createEntity(storageId, propData);\r\n    }\r\n\r\n    createEntityFilter() {\r\n        const _ = this;\r\n        const storageId = DataStorage.filter;\r\n\r\n        const propData = {\r\n            PropFilterTable: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'TABLE', NAME: 'table id', TYPE: 'S' }],\r\n            PropFilterData: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'DATA', NAME: 'data', TYPE: 'S' }],\r\n            PropFilterDefault: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'DEFAULT', NAME: 'default', TYPE: 'S' }],\r\n            PropFilterUser: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'USER', NAME: 'user', TYPE: 'S' }]\r\n        };\r\n\r\n        _.createEntity(storageId, propData);\r\n    }\r\n\r\n    createEntityFilterSort() {\r\n        const _ = this;\r\n        const storageId = DataStorage.filterSort;\r\n\r\n        const propData = {\r\n            PropFilterSortTable: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'TABLE', NAME: 'table id', TYPE: 'S' }],\r\n            PropFilterSortData: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'DATA', NAME: 'data', TYPE: 'S' }],\r\n            PropFilterSortUser: ['entity.item.property.add', { ENTITY: storageId, PROPERTY: 'USER', NAME: 'user', TYPE: 'S' }]\r\n        };\r\n\r\n        _.createEntity(storageId, propData);\r\n    }\r\n\r\n    async bindEvents() {\r\n        const _ = this;\r\n        if (!_.eventHandler) {\r\n            _.events.forEach((x) => {\r\n                _.addProgressKey(`EventKey${x}`);\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const eventCopies = _.events.slice();\r\n            const bindedEvents = await Rest.callMethod('event.get', {}, true);\r\n            bindedEvents.items.forEach(eventItem => {\r\n                const index = eventCopies.findIndex(x => eventItem.event === x);\r\n                if (index > -1) {\r\n                    eventCopies.slice(index, 1);\r\n                    _.addProgressKey(`EventKey${eventItem.event}`);\r\n                }\r\n            });\r\n\r\n            if (eventCopies.length > 0) {\r\n                const batchData = {};\r\n                eventCopies.forEach(x => {\r\n                    batchData[`EventKey${x}`] = ['event.bind', { event: x, handler: _.eventHandler }]\r\n                });\r\n\r\n                Rest.callBatch(batchData, (batchResult) => {\r\n                    const keys = Object.keys(batchResult);\r\n                    keys.forEach(key => {\r\n                        const eventResult = batchResult[key];\r\n                        if (eventResult.error()) {\r\n                            console.error('error-event-bind', eventResult.error());\r\n                        }\r\n                        else {\r\n                            _.addProgressKey(key);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error('event.get', err);\r\n        }\r\n    }\r\n\r\n    bindPlacements() {\r\n        const _ = this;\r\n        Rest.callMethod('placement.get').then(placements => {\r\n            const dealTab = placements.items.find(x => x.placement === 'CRM_DEAL_DETAIL_TAB');\r\n            if (dealTab) {\r\n                _.addProgressKey('PlacementDeal');\r\n            }\r\n            else {\r\n                //_.bindPlacementDeal();\r\n            }\r\n        }).catch(err => {\r\n            const error = err.ex ? err.ex : err;\r\n            if (error.error === 'ACCESS_DENIED') {\r\n                console.warn('cant get placement list');\r\n                _.addProgressKey('PlacementDeal');\r\n            }\r\n            else {\r\n                console.error('cant get placement list', err);\r\n            }\r\n        });\r\n    }\r\n\r\n    // bindPlacementDeal() {\r\n    //     const _ = this;\r\n    //     Rest.callMethod('placement.bind', {\r\n    //         PLACEMENT: 'CRM_DEAL_DETAIL_TAB',\r\n    //         HANDLER: '',\r\n    //         TITLE: ''\r\n    //     }).then(res => {\r\n    //         _.addProgressKey('PlacementDeal');\r\n    //     }).catch(err => {\r\n    //         const error = err.ex ? err.ex : err;\r\n    //         if (error.error === 'ACCESS_DENIED') {\r\n    //             console.warn('cant bind placement CRM_DEAL_DETAIL_TAB');\r\n    //             _.addProgressKey('PlacementDeal');\r\n    //         }\r\n    //         else {\r\n    //             console.error('cant bind placement CRM_DEAL_DETAIL_TAB', err);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    createEntity(storageId, properties) {\r\n        const _ = this;\r\n        Rest.callMethod('entity.add', { ENTITY: storageId, NAME: storageId, ACCESS: { AU: 'X' } }).then((result) => {\r\n            _.createEntityProperties(storageId, properties);\r\n        }).catch((err) => {\r\n            const error = err.ex ? err.ex : err;\r\n            if (error.error !== 'ERROR_ENTITY_ALREADY_EXISTS') {//ERROR_ENTITY_ALREADY_EXISTS\r\n                console.error('error-add-storage', storageId, error);\r\n            }\r\n            else {\r\n                _.createEntityProperties(storageId, properties);\r\n            }\r\n        });\r\n    }\r\n\r\n    createEntityProperties(storageId, properties) {\r\n        const _ = this;\r\n        Rest.callBatch(properties, function (result) {\r\n            for (var key in result) {\r\n                if (key.startsWith('Prop')) {\r\n                    var r = result[key];\r\n                    if (r.error()) {\r\n                        const err = r.error().error ? r.error() : r.error().ex;\r\n                        if (err.error !== 'ERROR_PROPERTY_ALREADY_EXISTS') {\r\n                            console.error(key, err, r.error());\r\n                        }\r\n                    }\r\n                    _.addProgressKey(key);\r\n                }\r\n            }\r\n            _.addProgressKey(storageId);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"progress\">\r\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{ width: this.getPercent() }}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport en from './locales/en.json';\r\nimport ru from './locales/ru.json';\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: en\r\n    },\r\n    ru: {\r\n        translation: ru\r\n    }\r\n};\r\n\r\ni18n\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        supportedLngs: ['en', 'ru'],\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        }\r\n    });\r\n\r\nexport default i18n;","export enum AccessKey {\r\n    settings = \"settings\"\r\n}","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Trans } from 'react-i18next';\r\nimport { AppContext } from '../context/app.context';\r\nimport { AccessKey } from '../enum/accessKey';\r\nimport '../css/header.css';\r\n\r\nclass Header extends React.Component {\r\n    static contextType = AppContext;\r\n    render() {\r\n        return (\r\n            <>\r\n                <header className=\"row\">\r\n                    <div className=\"col-sm-6 col-lg-6\">\r\n                        <NavLink className=\"profile-menu-item pb-3\" activeClassName=\"profile-menu-item-active\" exact to=\"/\">\r\n                            <Trans>page-main</Trans>\r\n                        </NavLink>\r\n                        {this.context.access(AccessKey.settings) &&\r\n                            <>\r\n                                <NavLink className=\"profile-menu-item pb-3\" activeClassName=\"profile-menu-item-active\" to=\"/log\">\r\n                                    <Trans>page-log</Trans>\r\n                                </NavLink>\r\n                                <NavLink className=\"profile-menu-item pb-3\" activeClassName=\"profile-menu-item-active\" to=\"/settings\">\r\n                                    <Trans>page-settings</Trans>\r\n                                </NavLink>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-sm-6 col-lg-6 d-flex flex-row-reverse header-right-buttons\">\r\n                        <a href=\"https://google.com\" target=\"_blank\">\r\n                            <a className=\"btn btn-success btn-md btn-floating me-1\" role=\"button\">\r\n                                <i className=\"fas fa-shopping-cart\"></i>\r\n                            </a>\r\n                            <Trans>btn-rates</Trans>\r\n                        </a>\r\n                        <a href=\"https://google.com\" target=\"_blank\" className=\"me-2\">\r\n                            <a className=\"btn btn-warning btn-md btn-floating me-1\" role=\"button\">\r\n                                <i className=\"fas fa-dollar-sign\"></i>\r\n                            </a>\r\n                            <Trans>btn-buy</Trans>\r\n                        </a>\r\n                        <a href=\"https://google.com\" target=\"_blank\" className=\"me-2\">\r\n                            <a className=\"btn btn-info btn-md btn-floating me-1\" role=\"button\">\r\n                                <i className=\"fas fa-question\"></i>\r\n                            </a>\r\n                            <Trans>btn-help</Trans>\r\n                        </a>\r\n                    </div>\r\n                </header>\r\n                <hr className=\"mt-0 mb-4\" />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport MainPage from './page/main';\r\nimport LogPage from './page/log';\r\nimport SettingsPage from './page/settings';\r\nimport UpdatePage from './page/update';\r\nimport { AppContext } from './context/app.context';\r\nimport { DataStorage } from './enum/dataStorage';\r\nimport Loader from './component/loader';\r\nimport { Rest } from './rest';\r\nimport Utils from './utils';\r\nimport i18n from './i18n';\r\nimport { AccessKey } from './enum/accessKey';\r\nimport Header from './component/header';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      appVersion: 1,\r\n      settingsCache: {},\r\n      settings: {},\r\n      loading: true,\r\n      needUpdate: false,\r\n      headerVisibility: true\r\n    };\r\n\r\n    this.DefaultSettings = [\r\n      new SettingsItem('AdminList', '', function () { return []; }),\r\n      new SettingsItem('Version', '', function () { return 0; }, false)\r\n    ];\r\n\r\n    Modal.setAppElement('#root');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    const _ = this;\r\n    try {\r\n      const currentUser = await Rest.init();\r\n      moment.locale(Rest.getLang());\r\n      i18n.changeLanguage(Rest.getLang());\r\n      _.setState({\r\n        currentUser: currentUser\r\n      }, async () => {\r\n        await _.initAppSettings();\r\n        _.setState({\r\n          loading: false\r\n        });\r\n\r\n        if (parseInt(_.state.settings.Version.Value) !== _.state.appVersion) {\r\n          _.setNeedUpdate();\r\n        }\r\n        else {\r\n          await _.tryCheckInstall();\r\n        }\r\n      });\r\n    }\r\n    catch (err) {\r\n      _.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  setAppSettings = async (key, data) => {\r\n    var rd = {\r\n      ENTITY: DataStorage.settings,\r\n      NAME: key,\r\n      ID: '',\r\n      PROPERTY_VALUES: {\r\n        VALUE: JSON.stringify(data)\r\n      }\r\n    };\r\n\r\n    if (this.state.settingsCache[key]) {\r\n      rd.ID = this.state.settingsCache[key].ID;\r\n      const result = await Rest.callMethod('entity.item.update', rd);\r\n      return true;\r\n    }\r\n    else {\r\n      const result = await Rest.callMethod('entity.item.add', rd);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  initAppSettings = () => {\r\n    const _ = this;\r\n    return new Promise((resolve, reject) => {\r\n      _.setState({\r\n        settingsCache: {}\r\n      }, async () => {\r\n        await _.getAppSettingsCache();\r\n        var appSettings = {};\r\n        _.DefaultSettings.forEach(function (item) {\r\n          const appSettingsValue = _.getAppSettings(item.Key);\r\n          appSettings[item.Key] = new SettingsItem(item.Key, appSettingsValue ? appSettingsValue : item.Default(), item.Default, item.SaveInSettings);\r\n        });\r\n        _.setState({\r\n          settings: appSettings\r\n        }, () => {\r\n          resolve(true);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  getAppSettingsCache = async () => {\r\n    const settingsCache = {};\r\n    try {\r\n      const result = await Rest.callMethod('entity.item.get', { ENTITY: DataStorage.settings }, true);\r\n      result.items.forEach(function (item) {\r\n        settingsCache[item.NAME] = item;\r\n      });\r\n      this.setState({\r\n        settingsCache: settingsCache\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.error('getAppSettingsCache', err);\r\n      this.setNeedUpdate();\r\n    }\r\n  }\r\n\r\n  getAppSettings = (key) => {\r\n    return this.state.settingsCache[key] ? Utils.tryParseJson(this.state.settingsCache[key].PROPERTY_VALUES.VALUE) : false;\r\n  }\r\n\r\n  updateComplete = () => {\r\n    this.setState({\r\n      needUpdate: false\r\n    });\r\n  }\r\n\r\n  access = (key) => {\r\n    const user = this.state.currentUser || null;\r\n    if (!user)\r\n      return false;\r\n\r\n    switch (key) {\r\n      case AccessKey.settings:\r\n        if (this.state.settings && this.state.settings['AdminList'].Value.includes(user.Id)) {\r\n          return true;\r\n        }\r\n        return user.isAdmin;\r\n    }\r\n    return user.isAdmin;\r\n  }\r\n\r\n  getCurrentUser = () => {\r\n    return this.state.currentUser;\r\n  }\r\n\r\n  setNeedUpdate() {\r\n    this.setState({\r\n      needUpdate: true\r\n    });\r\n  }\r\n\r\n  async tryCheckInstall() {\r\n    //для ситуации когда переустановили с сохранением параметров\r\n    try {\r\n      const result = await Rest.callMethod('app.info');\r\n      if (result.items && result.items.length > 0) {\r\n        if (!result.items[0].INSTALLED) {\r\n          this.setNeedUpdate();\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error('tryCheckInstall', err);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setHeaderVisibility = (state) => {\r\n    this.setState({\r\n      headerVisibility: state\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className=\"app container-fluid my-2\">\r\n          <div className=\"text-center\">\r\n            <Loader />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!Rest.isInitComplete()) {\r\n      return (\r\n        <div className=\"app container-fluid my-2\">This is Sparta! (not bitrix)</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <AppContext.Provider value={{\r\n        appVersion: this.state.appVersion,\r\n        getCurrentUser: this.getCurrentUser,\r\n        settings: this.state.settings, initAppSettings: this.initAppSettings, setAppSettings: this.setAppSettings, updateComplete: this.updateComplete,\r\n        access: this.access, setHeaderVisibility: this.setHeaderVisibility\r\n      }}>\r\n        <Router>\r\n          <div className=\"app container-fluid my-2\">\r\n            {!this.state.loading && !this.state.needUpdate &&\r\n              <>\r\n                {this.state.headerVisibility &&\r\n                  <Header />\r\n                }\r\n                <Switch>\r\n                  <Route path=\"/log\" component={LogPage} />\r\n                  <Route path=\"/settings\" component={SettingsPage} />\r\n                  <Route path=\"/\" component={MainPage} />\r\n                </Switch>\r\n              </>\r\n            }\r\n            {this.state.needUpdate &&\r\n              <UpdatePage />\r\n            }\r\n          </div>\r\n        </Router>\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nclass SettingsItem {\r\n  constructor(key, value, funcDefault, saveInSettings = true) {\r\n    this.Key = key;\r\n    this.Value = value;\r\n    this.Default = funcDefault;\r\n    this.SaveStatus = true;\r\n    this.SaveInSettings = saveInSettings;\r\n  }\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './css/main.css';\r\nimport './css/mdb.css';\r\nimport './css/filter.css';\r\nimport './css/table.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}